---
- name: "Run benchmark"
  hosts: clients
  remote_user: root
  vars: 
    # Note, the following should be passed as extra vars on playbook execution. 
    # See vars.json for an example, which can be passed with the option "--extra-vars @vars.json".
    #
    # process_n: number of processes to spawn per client host
    # param_n: number of parameters to get per process
    # param_structure: parameter structure
    # uri: server uri
    # extra_opts: extra options to pass to benchmark executable
    # at_minutes: minute offset to schedule at
    
    # Timestamps are used to identify/retrieve results 
    timestamp: '{{ansible_date_time.iso8601}}'
    bench_log_line: 'timestamp={{timestamp}}, process_n={{process_n}}, param_n={{param_n}}, uri={{uri}}'

    # Here we build up a big command piece-by-piece
    # The options for the benchmark executable
    bench_opts: >
      --param-n={{param_n}} 
      --param-structure={{param_structure}}
      --uri={{uri}} 
      --log-dir={{client_dir_log}} 
      --log-id={{timestamp}}_{{inventory_hostname}}
      {{extra_opts}}

    # Command to launch the executable
    process_launch_command: '{{client_dir_lib}}/{{bench_executable}} {{bench_opts}}'

    # For loop to launch multiple executables
    for_command: 'for ((i=0; i<{{process_n}}; i++)); do {{process_launch_command}} & done'

    # Scheduling the launching
    schedule_command: "echo '{{for_command}}' | at now +{{at_minutes}} minutes"
    
  tasks:

  - name: "Log benchmark execution"
    local_action: shell echo {{timestamp}} >> timestamps.txt; echo {{bench_log_line}} >> bench_log.txt

  - name: "Schedule benchmark"
    shell: '{{schedule_command}}'  
    args:
      chdir: '{{client_dir_lib}}'

