// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#ifndef PROTOBUF_rpc_2eproto__INCLUDED
#define PROTOBUF_rpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "kv.pb.h"
#include "auth.pb.h"
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)

namespace etcdserverpb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_rpc_2eproto();
void protobuf_AssignDesc_rpc_2eproto();
void protobuf_ShutdownFile_rpc_2eproto();

class AlarmMember;
class AlarmRequest;
class AlarmResponse;
class AuthDisableRequest;
class AuthDisableResponse;
class AuthEnableRequest;
class AuthEnableResponse;
class AuthRoleAddRequest;
class AuthRoleAddResponse;
class AuthRoleDeleteRequest;
class AuthRoleDeleteResponse;
class AuthRoleGetRequest;
class AuthRoleGetResponse;
class AuthRoleGrantPermissionRequest;
class AuthRoleGrantPermissionResponse;
class AuthRoleListRequest;
class AuthRoleListResponse;
class AuthRoleRevokePermissionRequest;
class AuthRoleRevokePermissionResponse;
class AuthUserAddRequest;
class AuthUserAddResponse;
class AuthUserChangePasswordRequest;
class AuthUserChangePasswordResponse;
class AuthUserDeleteRequest;
class AuthUserDeleteResponse;
class AuthUserGetRequest;
class AuthUserGetResponse;
class AuthUserGrantRoleRequest;
class AuthUserGrantRoleResponse;
class AuthUserListRequest;
class AuthUserListResponse;
class AuthUserRevokeRoleRequest;
class AuthUserRevokeRoleResponse;
class AuthenticateRequest;
class AuthenticateResponse;
class CompactionRequest;
class CompactionResponse;
class Compare;
class DefragmentRequest;
class DefragmentResponse;
class DeleteRangeRequest;
class DeleteRangeResponse;
class HashRequest;
class HashResponse;
class LeaseGrantRequest;
class LeaseGrantResponse;
class LeaseKeepAliveRequest;
class LeaseKeepAliveResponse;
class LeaseRevokeRequest;
class LeaseRevokeResponse;
class LeaseTimeToLiveRequest;
class LeaseTimeToLiveResponse;
class Member;
class MemberAddRequest;
class MemberAddResponse;
class MemberListRequest;
class MemberListResponse;
class MemberRemoveRequest;
class MemberRemoveResponse;
class MemberUpdateRequest;
class MemberUpdateResponse;
class PutRequest;
class PutResponse;
class RangeRequest;
class RangeResponse;
class RequestOp;
class ResponseHeader;
class ResponseOp;
class SnapshotRequest;
class SnapshotResponse;
class StatusRequest;
class StatusResponse;
class TxnRequest;
class TxnResponse;
class WatchCancelRequest;
class WatchCreateRequest;
class WatchRequest;
class WatchResponse;

enum RangeRequest_SortOrder {
  RangeRequest_SortOrder_NONE = 0,
  RangeRequest_SortOrder_ASCEND = 1,
  RangeRequest_SortOrder_DESCEND = 2,
  RangeRequest_SortOrder_RangeRequest_SortOrder_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RangeRequest_SortOrder_RangeRequest_SortOrder_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RangeRequest_SortOrder_IsValid(int value);
const RangeRequest_SortOrder RangeRequest_SortOrder_SortOrder_MIN = RangeRequest_SortOrder_NONE;
const RangeRequest_SortOrder RangeRequest_SortOrder_SortOrder_MAX = RangeRequest_SortOrder_DESCEND;
const int RangeRequest_SortOrder_SortOrder_ARRAYSIZE = RangeRequest_SortOrder_SortOrder_MAX + 1;

const ::google::protobuf::EnumDescriptor* RangeRequest_SortOrder_descriptor();
inline const ::std::string& RangeRequest_SortOrder_Name(RangeRequest_SortOrder value) {
  return ::google::protobuf::internal::NameOfEnum(
    RangeRequest_SortOrder_descriptor(), value);
}
inline bool RangeRequest_SortOrder_Parse(
    const ::std::string& name, RangeRequest_SortOrder* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RangeRequest_SortOrder>(
    RangeRequest_SortOrder_descriptor(), name, value);
}
enum RangeRequest_SortTarget {
  RangeRequest_SortTarget_KEY = 0,
  RangeRequest_SortTarget_VERSION = 1,
  RangeRequest_SortTarget_CREATE = 2,
  RangeRequest_SortTarget_MOD = 3,
  RangeRequest_SortTarget_VALUE = 4,
  RangeRequest_SortTarget_RangeRequest_SortTarget_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RangeRequest_SortTarget_RangeRequest_SortTarget_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RangeRequest_SortTarget_IsValid(int value);
const RangeRequest_SortTarget RangeRequest_SortTarget_SortTarget_MIN = RangeRequest_SortTarget_KEY;
const RangeRequest_SortTarget RangeRequest_SortTarget_SortTarget_MAX = RangeRequest_SortTarget_VALUE;
const int RangeRequest_SortTarget_SortTarget_ARRAYSIZE = RangeRequest_SortTarget_SortTarget_MAX + 1;

const ::google::protobuf::EnumDescriptor* RangeRequest_SortTarget_descriptor();
inline const ::std::string& RangeRequest_SortTarget_Name(RangeRequest_SortTarget value) {
  return ::google::protobuf::internal::NameOfEnum(
    RangeRequest_SortTarget_descriptor(), value);
}
inline bool RangeRequest_SortTarget_Parse(
    const ::std::string& name, RangeRequest_SortTarget* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RangeRequest_SortTarget>(
    RangeRequest_SortTarget_descriptor(), name, value);
}
enum Compare_CompareResult {
  Compare_CompareResult_EQUAL = 0,
  Compare_CompareResult_GREATER = 1,
  Compare_CompareResult_LESS = 2,
  Compare_CompareResult_Compare_CompareResult_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Compare_CompareResult_Compare_CompareResult_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Compare_CompareResult_IsValid(int value);
const Compare_CompareResult Compare_CompareResult_CompareResult_MIN = Compare_CompareResult_EQUAL;
const Compare_CompareResult Compare_CompareResult_CompareResult_MAX = Compare_CompareResult_LESS;
const int Compare_CompareResult_CompareResult_ARRAYSIZE = Compare_CompareResult_CompareResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* Compare_CompareResult_descriptor();
inline const ::std::string& Compare_CompareResult_Name(Compare_CompareResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    Compare_CompareResult_descriptor(), value);
}
inline bool Compare_CompareResult_Parse(
    const ::std::string& name, Compare_CompareResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Compare_CompareResult>(
    Compare_CompareResult_descriptor(), name, value);
}
enum Compare_CompareTarget {
  Compare_CompareTarget_VERSION = 0,
  Compare_CompareTarget_CREATE = 1,
  Compare_CompareTarget_MOD = 2,
  Compare_CompareTarget_VALUE = 3,
  Compare_CompareTarget_Compare_CompareTarget_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Compare_CompareTarget_Compare_CompareTarget_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Compare_CompareTarget_IsValid(int value);
const Compare_CompareTarget Compare_CompareTarget_CompareTarget_MIN = Compare_CompareTarget_VERSION;
const Compare_CompareTarget Compare_CompareTarget_CompareTarget_MAX = Compare_CompareTarget_VALUE;
const int Compare_CompareTarget_CompareTarget_ARRAYSIZE = Compare_CompareTarget_CompareTarget_MAX + 1;

const ::google::protobuf::EnumDescriptor* Compare_CompareTarget_descriptor();
inline const ::std::string& Compare_CompareTarget_Name(Compare_CompareTarget value) {
  return ::google::protobuf::internal::NameOfEnum(
    Compare_CompareTarget_descriptor(), value);
}
inline bool Compare_CompareTarget_Parse(
    const ::std::string& name, Compare_CompareTarget* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Compare_CompareTarget>(
    Compare_CompareTarget_descriptor(), name, value);
}
enum WatchCreateRequest_FilterType {
  WatchCreateRequest_FilterType_NOPUT = 0,
  WatchCreateRequest_FilterType_NODELETE = 1,
  WatchCreateRequest_FilterType_WatchCreateRequest_FilterType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WatchCreateRequest_FilterType_WatchCreateRequest_FilterType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WatchCreateRequest_FilterType_IsValid(int value);
const WatchCreateRequest_FilterType WatchCreateRequest_FilterType_FilterType_MIN = WatchCreateRequest_FilterType_NOPUT;
const WatchCreateRequest_FilterType WatchCreateRequest_FilterType_FilterType_MAX = WatchCreateRequest_FilterType_NODELETE;
const int WatchCreateRequest_FilterType_FilterType_ARRAYSIZE = WatchCreateRequest_FilterType_FilterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WatchCreateRequest_FilterType_descriptor();
inline const ::std::string& WatchCreateRequest_FilterType_Name(WatchCreateRequest_FilterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WatchCreateRequest_FilterType_descriptor(), value);
}
inline bool WatchCreateRequest_FilterType_Parse(
    const ::std::string& name, WatchCreateRequest_FilterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WatchCreateRequest_FilterType>(
    WatchCreateRequest_FilterType_descriptor(), name, value);
}
enum AlarmRequest_AlarmAction {
  AlarmRequest_AlarmAction_GET = 0,
  AlarmRequest_AlarmAction_ACTIVATE = 1,
  AlarmRequest_AlarmAction_DEACTIVATE = 2,
  AlarmRequest_AlarmAction_AlarmRequest_AlarmAction_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AlarmRequest_AlarmAction_AlarmRequest_AlarmAction_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AlarmRequest_AlarmAction_IsValid(int value);
const AlarmRequest_AlarmAction AlarmRequest_AlarmAction_AlarmAction_MIN = AlarmRequest_AlarmAction_GET;
const AlarmRequest_AlarmAction AlarmRequest_AlarmAction_AlarmAction_MAX = AlarmRequest_AlarmAction_DEACTIVATE;
const int AlarmRequest_AlarmAction_AlarmAction_ARRAYSIZE = AlarmRequest_AlarmAction_AlarmAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlarmRequest_AlarmAction_descriptor();
inline const ::std::string& AlarmRequest_AlarmAction_Name(AlarmRequest_AlarmAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlarmRequest_AlarmAction_descriptor(), value);
}
inline bool AlarmRequest_AlarmAction_Parse(
    const ::std::string& name, AlarmRequest_AlarmAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlarmRequest_AlarmAction>(
    AlarmRequest_AlarmAction_descriptor(), name, value);
}
enum AlarmType {
  NONE = 0,
  NOSPACE = 1,
  AlarmType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AlarmType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AlarmType_IsValid(int value);
const AlarmType AlarmType_MIN = NONE;
const AlarmType AlarmType_MAX = NOSPACE;
const int AlarmType_ARRAYSIZE = AlarmType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlarmType_descriptor();
inline const ::std::string& AlarmType_Name(AlarmType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlarmType_descriptor(), value);
}
inline bool AlarmType_Parse(
    const ::std::string& name, AlarmType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlarmType>(
    AlarmType_descriptor(), name, value);
}
// ===================================================================

class ResponseHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.ResponseHeader) */ {
 public:
  ResponseHeader();
  virtual ~ResponseHeader();

  ResponseHeader(const ResponseHeader& from);

  inline ResponseHeader& operator=(const ResponseHeader& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseHeader& default_instance();

  void Swap(ResponseHeader* other);

  // implements Message ----------------------------------------------

  inline ResponseHeader* New() const { return New(NULL); }

  ResponseHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseHeader& from);
  void MergeFrom(const ResponseHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 cluster_id = 1;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 1;
  ::google::protobuf::uint64 cluster_id() const;
  void set_cluster_id(::google::protobuf::uint64 value);

  // optional uint64 member_id = 2;
  void clear_member_id();
  static const int kMemberIdFieldNumber = 2;
  ::google::protobuf::uint64 member_id() const;
  void set_member_id(::google::protobuf::uint64 value);

  // optional int64 revision = 3;
  void clear_revision();
  static const int kRevisionFieldNumber = 3;
  ::google::protobuf::int64 revision() const;
  void set_revision(::google::protobuf::int64 value);

  // optional uint64 raft_term = 4;
  void clear_raft_term();
  static const int kRaftTermFieldNumber = 4;
  ::google::protobuf::uint64 raft_term() const;
  void set_raft_term(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.ResponseHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 cluster_id_;
  ::google::protobuf::uint64 member_id_;
  ::google::protobuf::int64 revision_;
  ::google::protobuf::uint64 raft_term_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static ResponseHeader* default_instance_;
};
// -------------------------------------------------------------------

class RangeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.RangeRequest) */ {
 public:
  RangeRequest();
  virtual ~RangeRequest();

  RangeRequest(const RangeRequest& from);

  inline RangeRequest& operator=(const RangeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RangeRequest& default_instance();

  void Swap(RangeRequest* other);

  // implements Message ----------------------------------------------

  inline RangeRequest* New() const { return New(NULL); }

  RangeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RangeRequest& from);
  void MergeFrom(const RangeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RangeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RangeRequest_SortOrder SortOrder;
  static const SortOrder NONE =
    RangeRequest_SortOrder_NONE;
  static const SortOrder ASCEND =
    RangeRequest_SortOrder_ASCEND;
  static const SortOrder DESCEND =
    RangeRequest_SortOrder_DESCEND;
  static inline bool SortOrder_IsValid(int value) {
    return RangeRequest_SortOrder_IsValid(value);
  }
  static const SortOrder SortOrder_MIN =
    RangeRequest_SortOrder_SortOrder_MIN;
  static const SortOrder SortOrder_MAX =
    RangeRequest_SortOrder_SortOrder_MAX;
  static const int SortOrder_ARRAYSIZE =
    RangeRequest_SortOrder_SortOrder_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SortOrder_descriptor() {
    return RangeRequest_SortOrder_descriptor();
  }
  static inline const ::std::string& SortOrder_Name(SortOrder value) {
    return RangeRequest_SortOrder_Name(value);
  }
  static inline bool SortOrder_Parse(const ::std::string& name,
      SortOrder* value) {
    return RangeRequest_SortOrder_Parse(name, value);
  }

  typedef RangeRequest_SortTarget SortTarget;
  static const SortTarget KEY =
    RangeRequest_SortTarget_KEY;
  static const SortTarget VERSION =
    RangeRequest_SortTarget_VERSION;
  static const SortTarget CREATE =
    RangeRequest_SortTarget_CREATE;
  static const SortTarget MOD =
    RangeRequest_SortTarget_MOD;
  static const SortTarget VALUE =
    RangeRequest_SortTarget_VALUE;
  static inline bool SortTarget_IsValid(int value) {
    return RangeRequest_SortTarget_IsValid(value);
  }
  static const SortTarget SortTarget_MIN =
    RangeRequest_SortTarget_SortTarget_MIN;
  static const SortTarget SortTarget_MAX =
    RangeRequest_SortTarget_SortTarget_MAX;
  static const int SortTarget_ARRAYSIZE =
    RangeRequest_SortTarget_SortTarget_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SortTarget_descriptor() {
    return RangeRequest_SortTarget_descriptor();
  }
  static inline const ::std::string& SortTarget_Name(SortTarget value) {
    return RangeRequest_SortTarget_Name(value);
  }
  static inline bool SortTarget_Parse(const ::std::string& name,
      SortTarget* value) {
    return RangeRequest_SortTarget_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes range_end = 2;
  void clear_range_end();
  static const int kRangeEndFieldNumber = 2;
  const ::std::string& range_end() const;
  void set_range_end(const ::std::string& value);
  void set_range_end(const char* value);
  void set_range_end(const void* value, size_t size);
  ::std::string* mutable_range_end();
  ::std::string* release_range_end();
  void set_allocated_range_end(::std::string* range_end);

  // optional int64 limit = 3;
  void clear_limit();
  static const int kLimitFieldNumber = 3;
  ::google::protobuf::int64 limit() const;
  void set_limit(::google::protobuf::int64 value);

  // optional int64 revision = 4;
  void clear_revision();
  static const int kRevisionFieldNumber = 4;
  ::google::protobuf::int64 revision() const;
  void set_revision(::google::protobuf::int64 value);

  // optional .etcdserverpb.RangeRequest.SortOrder sort_order = 5;
  void clear_sort_order();
  static const int kSortOrderFieldNumber = 5;
  ::etcdserverpb::RangeRequest_SortOrder sort_order() const;
  void set_sort_order(::etcdserverpb::RangeRequest_SortOrder value);

  // optional .etcdserverpb.RangeRequest.SortTarget sort_target = 6;
  void clear_sort_target();
  static const int kSortTargetFieldNumber = 6;
  ::etcdserverpb::RangeRequest_SortTarget sort_target() const;
  void set_sort_target(::etcdserverpb::RangeRequest_SortTarget value);

  // optional bool serializable = 7;
  void clear_serializable();
  static const int kSerializableFieldNumber = 7;
  bool serializable() const;
  void set_serializable(bool value);

  // optional bool keys_only = 8;
  void clear_keys_only();
  static const int kKeysOnlyFieldNumber = 8;
  bool keys_only() const;
  void set_keys_only(bool value);

  // optional bool count_only = 9;
  void clear_count_only();
  static const int kCountOnlyFieldNumber = 9;
  bool count_only() const;
  void set_count_only(bool value);

  // optional int64 min_mod_revision = 10;
  void clear_min_mod_revision();
  static const int kMinModRevisionFieldNumber = 10;
  ::google::protobuf::int64 min_mod_revision() const;
  void set_min_mod_revision(::google::protobuf::int64 value);

  // optional int64 max_mod_revision = 11;
  void clear_max_mod_revision();
  static const int kMaxModRevisionFieldNumber = 11;
  ::google::protobuf::int64 max_mod_revision() const;
  void set_max_mod_revision(::google::protobuf::int64 value);

  // optional int64 min_create_revision = 12;
  void clear_min_create_revision();
  static const int kMinCreateRevisionFieldNumber = 12;
  ::google::protobuf::int64 min_create_revision() const;
  void set_min_create_revision(::google::protobuf::int64 value);

  // optional int64 max_create_revision = 13;
  void clear_max_create_revision();
  static const int kMaxCreateRevisionFieldNumber = 13;
  ::google::protobuf::int64 max_create_revision() const;
  void set_max_create_revision(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.RangeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr range_end_;
  ::google::protobuf::int64 limit_;
  ::google::protobuf::int64 revision_;
  int sort_order_;
  int sort_target_;
  ::google::protobuf::int64 min_mod_revision_;
  ::google::protobuf::int64 max_mod_revision_;
  ::google::protobuf::int64 min_create_revision_;
  ::google::protobuf::int64 max_create_revision_;
  bool serializable_;
  bool keys_only_;
  bool count_only_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static RangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class RangeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.RangeResponse) */ {
 public:
  RangeResponse();
  virtual ~RangeResponse();

  RangeResponse(const RangeResponse& from);

  inline RangeResponse& operator=(const RangeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RangeResponse& default_instance();

  void Swap(RangeResponse* other);

  // implements Message ----------------------------------------------

  inline RangeResponse* New() const { return New(NULL); }

  RangeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RangeResponse& from);
  void MergeFrom(const RangeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RangeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // repeated .mvccpb.KeyValue kvs = 2;
  int kvs_size() const;
  void clear_kvs();
  static const int kKvsFieldNumber = 2;
  const ::mvccpb::KeyValue& kvs(int index) const;
  ::mvccpb::KeyValue* mutable_kvs(int index);
  ::mvccpb::KeyValue* add_kvs();
  ::google::protobuf::RepeatedPtrField< ::mvccpb::KeyValue >*
      mutable_kvs();
  const ::google::protobuf::RepeatedPtrField< ::mvccpb::KeyValue >&
      kvs() const;

  // optional bool more = 3;
  void clear_more();
  static const int kMoreFieldNumber = 3;
  bool more() const;
  void set_more(bool value);

  // optional int64 count = 4;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.RangeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::RepeatedPtrField< ::mvccpb::KeyValue > kvs_;
  ::google::protobuf::int64 count_;
  bool more_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static RangeResponse* default_instance_;
};
// -------------------------------------------------------------------

class PutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.PutRequest) */ {
 public:
  PutRequest();
  virtual ~PutRequest();

  PutRequest(const PutRequest& from);

  inline PutRequest& operator=(const PutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutRequest& default_instance();

  void Swap(PutRequest* other);

  // implements Message ----------------------------------------------

  inline PutRequest* New() const { return New(NULL); }

  PutRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutRequest& from);
  void MergeFrom(const PutRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional int64 lease = 3;
  void clear_lease();
  static const int kLeaseFieldNumber = 3;
  ::google::protobuf::int64 lease() const;
  void set_lease(::google::protobuf::int64 value);

  // optional bool prev_kv = 4;
  void clear_prev_kv();
  static const int kPrevKvFieldNumber = 4;
  bool prev_kv() const;
  void set_prev_kv(bool value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.PutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int64 lease_;
  bool prev_kv_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static PutRequest* default_instance_;
};
// -------------------------------------------------------------------

class PutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.PutResponse) */ {
 public:
  PutResponse();
  virtual ~PutResponse();

  PutResponse(const PutResponse& from);

  inline PutResponse& operator=(const PutResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutResponse& default_instance();

  void Swap(PutResponse* other);

  // implements Message ----------------------------------------------

  inline PutResponse* New() const { return New(NULL); }

  PutResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutResponse& from);
  void MergeFrom(const PutResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // optional .mvccpb.KeyValue prev_kv = 2;
  bool has_prev_kv() const;
  void clear_prev_kv();
  static const int kPrevKvFieldNumber = 2;
  const ::mvccpb::KeyValue& prev_kv() const;
  ::mvccpb::KeyValue* mutable_prev_kv();
  ::mvccpb::KeyValue* release_prev_kv();
  void set_allocated_prev_kv(::mvccpb::KeyValue* prev_kv);

  // @@protoc_insertion_point(class_scope:etcdserverpb.PutResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::mvccpb::KeyValue* prev_kv_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static PutResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRangeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.DeleteRangeRequest) */ {
 public:
  DeleteRangeRequest();
  virtual ~DeleteRangeRequest();

  DeleteRangeRequest(const DeleteRangeRequest& from);

  inline DeleteRangeRequest& operator=(const DeleteRangeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRangeRequest& default_instance();

  void Swap(DeleteRangeRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteRangeRequest* New() const { return New(NULL); }

  DeleteRangeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRangeRequest& from);
  void MergeFrom(const DeleteRangeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteRangeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes range_end = 2;
  void clear_range_end();
  static const int kRangeEndFieldNumber = 2;
  const ::std::string& range_end() const;
  void set_range_end(const ::std::string& value);
  void set_range_end(const char* value);
  void set_range_end(const void* value, size_t size);
  ::std::string* mutable_range_end();
  ::std::string* release_range_end();
  void set_allocated_range_end(::std::string* range_end);

  // optional bool prev_kv = 3;
  void clear_prev_kv();
  static const int kPrevKvFieldNumber = 3;
  bool prev_kv() const;
  void set_prev_kv(bool value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.DeleteRangeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr range_end_;
  bool prev_kv_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static DeleteRangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRangeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.DeleteRangeResponse) */ {
 public:
  DeleteRangeResponse();
  virtual ~DeleteRangeResponse();

  DeleteRangeResponse(const DeleteRangeResponse& from);

  inline DeleteRangeResponse& operator=(const DeleteRangeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRangeResponse& default_instance();

  void Swap(DeleteRangeResponse* other);

  // implements Message ----------------------------------------------

  inline DeleteRangeResponse* New() const { return New(NULL); }

  DeleteRangeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRangeResponse& from);
  void MergeFrom(const DeleteRangeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteRangeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // optional int64 deleted = 2;
  void clear_deleted();
  static const int kDeletedFieldNumber = 2;
  ::google::protobuf::int64 deleted() const;
  void set_deleted(::google::protobuf::int64 value);

  // repeated .mvccpb.KeyValue prev_kvs = 3;
  int prev_kvs_size() const;
  void clear_prev_kvs();
  static const int kPrevKvsFieldNumber = 3;
  const ::mvccpb::KeyValue& prev_kvs(int index) const;
  ::mvccpb::KeyValue* mutable_prev_kvs(int index);
  ::mvccpb::KeyValue* add_prev_kvs();
  ::google::protobuf::RepeatedPtrField< ::mvccpb::KeyValue >*
      mutable_prev_kvs();
  const ::google::protobuf::RepeatedPtrField< ::mvccpb::KeyValue >&
      prev_kvs() const;

  // @@protoc_insertion_point(class_scope:etcdserverpb.DeleteRangeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::int64 deleted_;
  ::google::protobuf::RepeatedPtrField< ::mvccpb::KeyValue > prev_kvs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static DeleteRangeResponse* default_instance_;
};
// -------------------------------------------------------------------

class RequestOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.RequestOp) */ {
 public:
  RequestOp();
  virtual ~RequestOp();

  RequestOp(const RequestOp& from);

  inline RequestOp& operator=(const RequestOp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestOp& default_instance();

  enum RequestCase {
    kRequestRange = 1,
    kRequestPut = 2,
    kRequestDeleteRange = 3,
    REQUEST_NOT_SET = 0,
  };

  void Swap(RequestOp* other);

  // implements Message ----------------------------------------------

  inline RequestOp* New() const { return New(NULL); }

  RequestOp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestOp& from);
  void MergeFrom(const RequestOp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.RangeRequest request_range = 1;
  bool has_request_range() const;
  void clear_request_range();
  static const int kRequestRangeFieldNumber = 1;
  const ::etcdserverpb::RangeRequest& request_range() const;
  ::etcdserverpb::RangeRequest* mutable_request_range();
  ::etcdserverpb::RangeRequest* release_request_range();
  void set_allocated_request_range(::etcdserverpb::RangeRequest* request_range);

  // optional .etcdserverpb.PutRequest request_put = 2;
  bool has_request_put() const;
  void clear_request_put();
  static const int kRequestPutFieldNumber = 2;
  const ::etcdserverpb::PutRequest& request_put() const;
  ::etcdserverpb::PutRequest* mutable_request_put();
  ::etcdserverpb::PutRequest* release_request_put();
  void set_allocated_request_put(::etcdserverpb::PutRequest* request_put);

  // optional .etcdserverpb.DeleteRangeRequest request_delete_range = 3;
  bool has_request_delete_range() const;
  void clear_request_delete_range();
  static const int kRequestDeleteRangeFieldNumber = 3;
  const ::etcdserverpb::DeleteRangeRequest& request_delete_range() const;
  ::etcdserverpb::DeleteRangeRequest* mutable_request_delete_range();
  ::etcdserverpb::DeleteRangeRequest* release_request_delete_range();
  void set_allocated_request_delete_range(::etcdserverpb::DeleteRangeRequest* request_delete_range);

  RequestCase request_case() const;
  // @@protoc_insertion_point(class_scope:etcdserverpb.RequestOp)
 private:
  inline void set_has_request_range();
  inline void set_has_request_put();
  inline void set_has_request_delete_range();

  inline bool has_request() const;
  void clear_request();
  inline void clear_has_request();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union RequestUnion {
    RequestUnion() {}
    ::etcdserverpb::RangeRequest* request_range_;
    ::etcdserverpb::PutRequest* request_put_;
    ::etcdserverpb::DeleteRangeRequest* request_delete_range_;
  } request_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static RequestOp* default_instance_;
};
// -------------------------------------------------------------------

class ResponseOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.ResponseOp) */ {
 public:
  ResponseOp();
  virtual ~ResponseOp();

  ResponseOp(const ResponseOp& from);

  inline ResponseOp& operator=(const ResponseOp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseOp& default_instance();

  enum ResponseCase {
    kResponseRange = 1,
    kResponsePut = 2,
    kResponseDeleteRange = 3,
    RESPONSE_NOT_SET = 0,
  };

  void Swap(ResponseOp* other);

  // implements Message ----------------------------------------------

  inline ResponseOp* New() const { return New(NULL); }

  ResponseOp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseOp& from);
  void MergeFrom(const ResponseOp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.RangeResponse response_range = 1;
  bool has_response_range() const;
  void clear_response_range();
  static const int kResponseRangeFieldNumber = 1;
  const ::etcdserverpb::RangeResponse& response_range() const;
  ::etcdserverpb::RangeResponse* mutable_response_range();
  ::etcdserverpb::RangeResponse* release_response_range();
  void set_allocated_response_range(::etcdserverpb::RangeResponse* response_range);

  // optional .etcdserverpb.PutResponse response_put = 2;
  bool has_response_put() const;
  void clear_response_put();
  static const int kResponsePutFieldNumber = 2;
  const ::etcdserverpb::PutResponse& response_put() const;
  ::etcdserverpb::PutResponse* mutable_response_put();
  ::etcdserverpb::PutResponse* release_response_put();
  void set_allocated_response_put(::etcdserverpb::PutResponse* response_put);

  // optional .etcdserverpb.DeleteRangeResponse response_delete_range = 3;
  bool has_response_delete_range() const;
  void clear_response_delete_range();
  static const int kResponseDeleteRangeFieldNumber = 3;
  const ::etcdserverpb::DeleteRangeResponse& response_delete_range() const;
  ::etcdserverpb::DeleteRangeResponse* mutable_response_delete_range();
  ::etcdserverpb::DeleteRangeResponse* release_response_delete_range();
  void set_allocated_response_delete_range(::etcdserverpb::DeleteRangeResponse* response_delete_range);

  ResponseCase response_case() const;
  // @@protoc_insertion_point(class_scope:etcdserverpb.ResponseOp)
 private:
  inline void set_has_response_range();
  inline void set_has_response_put();
  inline void set_has_response_delete_range();

  inline bool has_response() const;
  void clear_response();
  inline void clear_has_response();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union ResponseUnion {
    ResponseUnion() {}
    ::etcdserverpb::RangeResponse* response_range_;
    ::etcdserverpb::PutResponse* response_put_;
    ::etcdserverpb::DeleteRangeResponse* response_delete_range_;
  } response_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static ResponseOp* default_instance_;
};
// -------------------------------------------------------------------

class Compare : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.Compare) */ {
 public:
  Compare();
  virtual ~Compare();

  Compare(const Compare& from);

  inline Compare& operator=(const Compare& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Compare& default_instance();

  enum TargetUnionCase {
    kVersion = 4,
    kCreateRevision = 5,
    kModRevision = 6,
    kValue = 7,
    TARGET_UNION_NOT_SET = 0,
  };

  void Swap(Compare* other);

  // implements Message ----------------------------------------------

  inline Compare* New() const { return New(NULL); }

  Compare* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Compare& from);
  void MergeFrom(const Compare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Compare* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Compare_CompareResult CompareResult;
  static const CompareResult EQUAL =
    Compare_CompareResult_EQUAL;
  static const CompareResult GREATER =
    Compare_CompareResult_GREATER;
  static const CompareResult LESS =
    Compare_CompareResult_LESS;
  static inline bool CompareResult_IsValid(int value) {
    return Compare_CompareResult_IsValid(value);
  }
  static const CompareResult CompareResult_MIN =
    Compare_CompareResult_CompareResult_MIN;
  static const CompareResult CompareResult_MAX =
    Compare_CompareResult_CompareResult_MAX;
  static const int CompareResult_ARRAYSIZE =
    Compare_CompareResult_CompareResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompareResult_descriptor() {
    return Compare_CompareResult_descriptor();
  }
  static inline const ::std::string& CompareResult_Name(CompareResult value) {
    return Compare_CompareResult_Name(value);
  }
  static inline bool CompareResult_Parse(const ::std::string& name,
      CompareResult* value) {
    return Compare_CompareResult_Parse(name, value);
  }

  typedef Compare_CompareTarget CompareTarget;
  static const CompareTarget VERSION =
    Compare_CompareTarget_VERSION;
  static const CompareTarget CREATE =
    Compare_CompareTarget_CREATE;
  static const CompareTarget MOD =
    Compare_CompareTarget_MOD;
  static const CompareTarget VALUE =
    Compare_CompareTarget_VALUE;
  static inline bool CompareTarget_IsValid(int value) {
    return Compare_CompareTarget_IsValid(value);
  }
  static const CompareTarget CompareTarget_MIN =
    Compare_CompareTarget_CompareTarget_MIN;
  static const CompareTarget CompareTarget_MAX =
    Compare_CompareTarget_CompareTarget_MAX;
  static const int CompareTarget_ARRAYSIZE =
    Compare_CompareTarget_CompareTarget_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompareTarget_descriptor() {
    return Compare_CompareTarget_descriptor();
  }
  static inline const ::std::string& CompareTarget_Name(CompareTarget value) {
    return Compare_CompareTarget_Name(value);
  }
  static inline bool CompareTarget_Parse(const ::std::string& name,
      CompareTarget* value) {
    return Compare_CompareTarget_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.Compare.CompareResult result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::etcdserverpb::Compare_CompareResult result() const;
  void set_result(::etcdserverpb::Compare_CompareResult value);

  // optional .etcdserverpb.Compare.CompareTarget target = 2;
  void clear_target();
  static const int kTargetFieldNumber = 2;
  ::etcdserverpb::Compare_CompareTarget target() const;
  void set_target(::etcdserverpb::Compare_CompareTarget value);

  // optional bytes key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional int64 version = 4;
  private:
  bool has_version() const;
  public:
  void clear_version();
  static const int kVersionFieldNumber = 4;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // optional int64 create_revision = 5;
  private:
  bool has_create_revision() const;
  public:
  void clear_create_revision();
  static const int kCreateRevisionFieldNumber = 5;
  ::google::protobuf::int64 create_revision() const;
  void set_create_revision(::google::protobuf::int64 value);

  // optional int64 mod_revision = 6;
  private:
  bool has_mod_revision() const;
  public:
  void clear_mod_revision();
  static const int kModRevisionFieldNumber = 6;
  ::google::protobuf::int64 mod_revision() const;
  void set_mod_revision(::google::protobuf::int64 value);

  // optional bytes value = 7;
  private:
  bool has_value() const;
  public:
  void clear_value();
  static const int kValueFieldNumber = 7;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  TargetUnionCase target_union_case() const;
  // @@protoc_insertion_point(class_scope:etcdserverpb.Compare)
 private:
  inline void set_has_version();
  inline void set_has_create_revision();
  inline void set_has_mod_revision();
  inline void set_has_value();

  inline bool has_target_union() const;
  void clear_target_union();
  inline void clear_has_target_union();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int result_;
  int target_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  union TargetUnionUnion {
    TargetUnionUnion() {}
    ::google::protobuf::int64 version_;
    ::google::protobuf::int64 create_revision_;
    ::google::protobuf::int64 mod_revision_;
    ::google::protobuf::internal::ArenaStringPtr value_;
  } target_union_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static Compare* default_instance_;
};
// -------------------------------------------------------------------

class TxnRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.TxnRequest) */ {
 public:
  TxnRequest();
  virtual ~TxnRequest();

  TxnRequest(const TxnRequest& from);

  inline TxnRequest& operator=(const TxnRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TxnRequest& default_instance();

  void Swap(TxnRequest* other);

  // implements Message ----------------------------------------------

  inline TxnRequest* New() const { return New(NULL); }

  TxnRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TxnRequest& from);
  void MergeFrom(const TxnRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TxnRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .etcdserverpb.Compare compare = 1;
  int compare_size() const;
  void clear_compare();
  static const int kCompareFieldNumber = 1;
  const ::etcdserverpb::Compare& compare(int index) const;
  ::etcdserverpb::Compare* mutable_compare(int index);
  ::etcdserverpb::Compare* add_compare();
  ::google::protobuf::RepeatedPtrField< ::etcdserverpb::Compare >*
      mutable_compare();
  const ::google::protobuf::RepeatedPtrField< ::etcdserverpb::Compare >&
      compare() const;

  // repeated .etcdserverpb.RequestOp success = 2;
  int success_size() const;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  const ::etcdserverpb::RequestOp& success(int index) const;
  ::etcdserverpb::RequestOp* mutable_success(int index);
  ::etcdserverpb::RequestOp* add_success();
  ::google::protobuf::RepeatedPtrField< ::etcdserverpb::RequestOp >*
      mutable_success();
  const ::google::protobuf::RepeatedPtrField< ::etcdserverpb::RequestOp >&
      success() const;

  // repeated .etcdserverpb.RequestOp failure = 3;
  int failure_size() const;
  void clear_failure();
  static const int kFailureFieldNumber = 3;
  const ::etcdserverpb::RequestOp& failure(int index) const;
  ::etcdserverpb::RequestOp* mutable_failure(int index);
  ::etcdserverpb::RequestOp* add_failure();
  ::google::protobuf::RepeatedPtrField< ::etcdserverpb::RequestOp >*
      mutable_failure();
  const ::google::protobuf::RepeatedPtrField< ::etcdserverpb::RequestOp >&
      failure() const;

  // @@protoc_insertion_point(class_scope:etcdserverpb.TxnRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::etcdserverpb::Compare > compare_;
  ::google::protobuf::RepeatedPtrField< ::etcdserverpb::RequestOp > success_;
  ::google::protobuf::RepeatedPtrField< ::etcdserverpb::RequestOp > failure_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static TxnRequest* default_instance_;
};
// -------------------------------------------------------------------

class TxnResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.TxnResponse) */ {
 public:
  TxnResponse();
  virtual ~TxnResponse();

  TxnResponse(const TxnResponse& from);

  inline TxnResponse& operator=(const TxnResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TxnResponse& default_instance();

  void Swap(TxnResponse* other);

  // implements Message ----------------------------------------------

  inline TxnResponse* New() const { return New(NULL); }

  TxnResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TxnResponse& from);
  void MergeFrom(const TxnResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TxnResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // optional bool succeeded = 2;
  void clear_succeeded();
  static const int kSucceededFieldNumber = 2;
  bool succeeded() const;
  void set_succeeded(bool value);

  // repeated .etcdserverpb.ResponseOp responses = 3;
  int responses_size() const;
  void clear_responses();
  static const int kResponsesFieldNumber = 3;
  const ::etcdserverpb::ResponseOp& responses(int index) const;
  ::etcdserverpb::ResponseOp* mutable_responses(int index);
  ::etcdserverpb::ResponseOp* add_responses();
  ::google::protobuf::RepeatedPtrField< ::etcdserverpb::ResponseOp >*
      mutable_responses();
  const ::google::protobuf::RepeatedPtrField< ::etcdserverpb::ResponseOp >&
      responses() const;

  // @@protoc_insertion_point(class_scope:etcdserverpb.TxnResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::RepeatedPtrField< ::etcdserverpb::ResponseOp > responses_;
  bool succeeded_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static TxnResponse* default_instance_;
};
// -------------------------------------------------------------------

class CompactionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.CompactionRequest) */ {
 public:
  CompactionRequest();
  virtual ~CompactionRequest();

  CompactionRequest(const CompactionRequest& from);

  inline CompactionRequest& operator=(const CompactionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompactionRequest& default_instance();

  void Swap(CompactionRequest* other);

  // implements Message ----------------------------------------------

  inline CompactionRequest* New() const { return New(NULL); }

  CompactionRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CompactionRequest& from);
  void MergeFrom(const CompactionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CompactionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 revision = 1;
  void clear_revision();
  static const int kRevisionFieldNumber = 1;
  ::google::protobuf::int64 revision() const;
  void set_revision(::google::protobuf::int64 value);

  // optional bool physical = 2;
  void clear_physical();
  static const int kPhysicalFieldNumber = 2;
  bool physical() const;
  void set_physical(bool value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.CompactionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 revision_;
  bool physical_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static CompactionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CompactionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.CompactionResponse) */ {
 public:
  CompactionResponse();
  virtual ~CompactionResponse();

  CompactionResponse(const CompactionResponse& from);

  inline CompactionResponse& operator=(const CompactionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompactionResponse& default_instance();

  void Swap(CompactionResponse* other);

  // implements Message ----------------------------------------------

  inline CompactionResponse* New() const { return New(NULL); }

  CompactionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CompactionResponse& from);
  void MergeFrom(const CompactionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CompactionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.CompactionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static CompactionResponse* default_instance_;
};
// -------------------------------------------------------------------

class HashRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.HashRequest) */ {
 public:
  HashRequest();
  virtual ~HashRequest();

  HashRequest(const HashRequest& from);

  inline HashRequest& operator=(const HashRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HashRequest& default_instance();

  void Swap(HashRequest* other);

  // implements Message ----------------------------------------------

  inline HashRequest* New() const { return New(NULL); }

  HashRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HashRequest& from);
  void MergeFrom(const HashRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HashRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:etcdserverpb.HashRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static HashRequest* default_instance_;
};
// -------------------------------------------------------------------

class HashResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.HashResponse) */ {
 public:
  HashResponse();
  virtual ~HashResponse();

  HashResponse(const HashResponse& from);

  inline HashResponse& operator=(const HashResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HashResponse& default_instance();

  void Swap(HashResponse* other);

  // implements Message ----------------------------------------------

  inline HashResponse* New() const { return New(NULL); }

  HashResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HashResponse& from);
  void MergeFrom(const HashResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HashResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // optional uint32 hash = 2;
  void clear_hash();
  static const int kHashFieldNumber = 2;
  ::google::protobuf::uint32 hash() const;
  void set_hash(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.HashResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::uint32 hash_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static HashResponse* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.SnapshotRequest) */ {
 public:
  SnapshotRequest();
  virtual ~SnapshotRequest();

  SnapshotRequest(const SnapshotRequest& from);

  inline SnapshotRequest& operator=(const SnapshotRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotRequest& default_instance();

  void Swap(SnapshotRequest* other);

  // implements Message ----------------------------------------------

  inline SnapshotRequest* New() const { return New(NULL); }

  SnapshotRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotRequest& from);
  void MergeFrom(const SnapshotRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SnapshotRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:etcdserverpb.SnapshotRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static SnapshotRequest* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.SnapshotResponse) */ {
 public:
  SnapshotResponse();
  virtual ~SnapshotResponse();

  SnapshotResponse(const SnapshotResponse& from);

  inline SnapshotResponse& operator=(const SnapshotResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotResponse& default_instance();

  void Swap(SnapshotResponse* other);

  // implements Message ----------------------------------------------

  inline SnapshotResponse* New() const { return New(NULL); }

  SnapshotResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotResponse& from);
  void MergeFrom(const SnapshotResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SnapshotResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // optional uint64 remaining_bytes = 2;
  void clear_remaining_bytes();
  static const int kRemainingBytesFieldNumber = 2;
  ::google::protobuf::uint64 remaining_bytes() const;
  void set_remaining_bytes(::google::protobuf::uint64 value);

  // optional bytes blob = 3;
  void clear_blob();
  static const int kBlobFieldNumber = 3;
  const ::std::string& blob() const;
  void set_blob(const ::std::string& value);
  void set_blob(const char* value);
  void set_blob(const void* value, size_t size);
  ::std::string* mutable_blob();
  ::std::string* release_blob();
  void set_allocated_blob(::std::string* blob);

  // @@protoc_insertion_point(class_scope:etcdserverpb.SnapshotResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::uint64 remaining_bytes_;
  ::google::protobuf::internal::ArenaStringPtr blob_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static SnapshotResponse* default_instance_;
};
// -------------------------------------------------------------------

class WatchRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.WatchRequest) */ {
 public:
  WatchRequest();
  virtual ~WatchRequest();

  WatchRequest(const WatchRequest& from);

  inline WatchRequest& operator=(const WatchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WatchRequest& default_instance();

  enum RequestUnionCase {
    kCreateRequest = 1,
    kCancelRequest = 2,
    REQUEST_UNION_NOT_SET = 0,
  };

  void Swap(WatchRequest* other);

  // implements Message ----------------------------------------------

  inline WatchRequest* New() const { return New(NULL); }

  WatchRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WatchRequest& from);
  void MergeFrom(const WatchRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WatchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.WatchCreateRequest create_request = 1;
  bool has_create_request() const;
  void clear_create_request();
  static const int kCreateRequestFieldNumber = 1;
  const ::etcdserverpb::WatchCreateRequest& create_request() const;
  ::etcdserverpb::WatchCreateRequest* mutable_create_request();
  ::etcdserverpb::WatchCreateRequest* release_create_request();
  void set_allocated_create_request(::etcdserverpb::WatchCreateRequest* create_request);

  // optional .etcdserverpb.WatchCancelRequest cancel_request = 2;
  bool has_cancel_request() const;
  void clear_cancel_request();
  static const int kCancelRequestFieldNumber = 2;
  const ::etcdserverpb::WatchCancelRequest& cancel_request() const;
  ::etcdserverpb::WatchCancelRequest* mutable_cancel_request();
  ::etcdserverpb::WatchCancelRequest* release_cancel_request();
  void set_allocated_cancel_request(::etcdserverpb::WatchCancelRequest* cancel_request);

  RequestUnionCase request_union_case() const;
  // @@protoc_insertion_point(class_scope:etcdserverpb.WatchRequest)
 private:
  inline void set_has_create_request();
  inline void set_has_cancel_request();

  inline bool has_request_union() const;
  void clear_request_union();
  inline void clear_has_request_union();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union RequestUnionUnion {
    RequestUnionUnion() {}
    ::etcdserverpb::WatchCreateRequest* create_request_;
    ::etcdserverpb::WatchCancelRequest* cancel_request_;
  } request_union_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static WatchRequest* default_instance_;
};
// -------------------------------------------------------------------

class WatchCreateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.WatchCreateRequest) */ {
 public:
  WatchCreateRequest();
  virtual ~WatchCreateRequest();

  WatchCreateRequest(const WatchCreateRequest& from);

  inline WatchCreateRequest& operator=(const WatchCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WatchCreateRequest& default_instance();

  void Swap(WatchCreateRequest* other);

  // implements Message ----------------------------------------------

  inline WatchCreateRequest* New() const { return New(NULL); }

  WatchCreateRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WatchCreateRequest& from);
  void MergeFrom(const WatchCreateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WatchCreateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WatchCreateRequest_FilterType FilterType;
  static const FilterType NOPUT =
    WatchCreateRequest_FilterType_NOPUT;
  static const FilterType NODELETE =
    WatchCreateRequest_FilterType_NODELETE;
  static inline bool FilterType_IsValid(int value) {
    return WatchCreateRequest_FilterType_IsValid(value);
  }
  static const FilterType FilterType_MIN =
    WatchCreateRequest_FilterType_FilterType_MIN;
  static const FilterType FilterType_MAX =
    WatchCreateRequest_FilterType_FilterType_MAX;
  static const int FilterType_ARRAYSIZE =
    WatchCreateRequest_FilterType_FilterType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FilterType_descriptor() {
    return WatchCreateRequest_FilterType_descriptor();
  }
  static inline const ::std::string& FilterType_Name(FilterType value) {
    return WatchCreateRequest_FilterType_Name(value);
  }
  static inline bool FilterType_Parse(const ::std::string& name,
      FilterType* value) {
    return WatchCreateRequest_FilterType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes range_end = 2;
  void clear_range_end();
  static const int kRangeEndFieldNumber = 2;
  const ::std::string& range_end() const;
  void set_range_end(const ::std::string& value);
  void set_range_end(const char* value);
  void set_range_end(const void* value, size_t size);
  ::std::string* mutable_range_end();
  ::std::string* release_range_end();
  void set_allocated_range_end(::std::string* range_end);

  // optional int64 start_revision = 3;
  void clear_start_revision();
  static const int kStartRevisionFieldNumber = 3;
  ::google::protobuf::int64 start_revision() const;
  void set_start_revision(::google::protobuf::int64 value);

  // optional bool progress_notify = 4;
  void clear_progress_notify();
  static const int kProgressNotifyFieldNumber = 4;
  bool progress_notify() const;
  void set_progress_notify(bool value);

  // repeated .etcdserverpb.WatchCreateRequest.FilterType filters = 5;
  int filters_size() const;
  void clear_filters();
  static const int kFiltersFieldNumber = 5;
  ::etcdserverpb::WatchCreateRequest_FilterType filters(int index) const;
  void set_filters(int index, ::etcdserverpb::WatchCreateRequest_FilterType value);
  void add_filters(::etcdserverpb::WatchCreateRequest_FilterType value);
  const ::google::protobuf::RepeatedField<int>& filters() const;
  ::google::protobuf::RepeatedField<int>* mutable_filters();

  // optional bool prev_kv = 6;
  void clear_prev_kv();
  static const int kPrevKvFieldNumber = 6;
  bool prev_kv() const;
  void set_prev_kv(bool value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.WatchCreateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr range_end_;
  ::google::protobuf::int64 start_revision_;
  ::google::protobuf::RepeatedField<int> filters_;
  mutable int _filters_cached_byte_size_;
  bool progress_notify_;
  bool prev_kv_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static WatchCreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class WatchCancelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.WatchCancelRequest) */ {
 public:
  WatchCancelRequest();
  virtual ~WatchCancelRequest();

  WatchCancelRequest(const WatchCancelRequest& from);

  inline WatchCancelRequest& operator=(const WatchCancelRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WatchCancelRequest& default_instance();

  void Swap(WatchCancelRequest* other);

  // implements Message ----------------------------------------------

  inline WatchCancelRequest* New() const { return New(NULL); }

  WatchCancelRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WatchCancelRequest& from);
  void MergeFrom(const WatchCancelRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WatchCancelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 watch_id = 1;
  void clear_watch_id();
  static const int kWatchIdFieldNumber = 1;
  ::google::protobuf::int64 watch_id() const;
  void set_watch_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.WatchCancelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 watch_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static WatchCancelRequest* default_instance_;
};
// -------------------------------------------------------------------

class WatchResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.WatchResponse) */ {
 public:
  WatchResponse();
  virtual ~WatchResponse();

  WatchResponse(const WatchResponse& from);

  inline WatchResponse& operator=(const WatchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WatchResponse& default_instance();

  void Swap(WatchResponse* other);

  // implements Message ----------------------------------------------

  inline WatchResponse* New() const { return New(NULL); }

  WatchResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WatchResponse& from);
  void MergeFrom(const WatchResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WatchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // optional int64 watch_id = 2;
  void clear_watch_id();
  static const int kWatchIdFieldNumber = 2;
  ::google::protobuf::int64 watch_id() const;
  void set_watch_id(::google::protobuf::int64 value);

  // optional bool created = 3;
  void clear_created();
  static const int kCreatedFieldNumber = 3;
  bool created() const;
  void set_created(bool value);

  // optional bool canceled = 4;
  void clear_canceled();
  static const int kCanceledFieldNumber = 4;
  bool canceled() const;
  void set_canceled(bool value);

  // optional int64 compact_revision = 5;
  void clear_compact_revision();
  static const int kCompactRevisionFieldNumber = 5;
  ::google::protobuf::int64 compact_revision() const;
  void set_compact_revision(::google::protobuf::int64 value);

  // repeated .mvccpb.Event events = 11;
  int events_size() const;
  void clear_events();
  static const int kEventsFieldNumber = 11;
  const ::mvccpb::Event& events(int index) const;
  ::mvccpb::Event* mutable_events(int index);
  ::mvccpb::Event* add_events();
  ::google::protobuf::RepeatedPtrField< ::mvccpb::Event >*
      mutable_events();
  const ::google::protobuf::RepeatedPtrField< ::mvccpb::Event >&
      events() const;

  // @@protoc_insertion_point(class_scope:etcdserverpb.WatchResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::int64 watch_id_;
  ::google::protobuf::int64 compact_revision_;
  ::google::protobuf::RepeatedPtrField< ::mvccpb::Event > events_;
  bool created_;
  bool canceled_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static WatchResponse* default_instance_;
};
// -------------------------------------------------------------------

class LeaseGrantRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseGrantRequest) */ {
 public:
  LeaseGrantRequest();
  virtual ~LeaseGrantRequest();

  LeaseGrantRequest(const LeaseGrantRequest& from);

  inline LeaseGrantRequest& operator=(const LeaseGrantRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaseGrantRequest& default_instance();

  void Swap(LeaseGrantRequest* other);

  // implements Message ----------------------------------------------

  inline LeaseGrantRequest* New() const { return New(NULL); }

  LeaseGrantRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaseGrantRequest& from);
  void MergeFrom(const LeaseGrantRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaseGrantRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 TTL = 1;
  void clear_ttl();
  static const int kTTLFieldNumber = 1;
  ::google::protobuf::int64 ttl() const;
  void set_ttl(::google::protobuf::int64 value);

  // optional int64 ID = 2;
  void clear_id();
  static const int kIDFieldNumber = 2;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseGrantRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 ttl_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static LeaseGrantRequest* default_instance_;
};
// -------------------------------------------------------------------

class LeaseGrantResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseGrantResponse) */ {
 public:
  LeaseGrantResponse();
  virtual ~LeaseGrantResponse();

  LeaseGrantResponse(const LeaseGrantResponse& from);

  inline LeaseGrantResponse& operator=(const LeaseGrantResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaseGrantResponse& default_instance();

  void Swap(LeaseGrantResponse* other);

  // implements Message ----------------------------------------------

  inline LeaseGrantResponse* New() const { return New(NULL); }

  LeaseGrantResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaseGrantResponse& from);
  void MergeFrom(const LeaseGrantResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaseGrantResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // optional int64 ID = 2;
  void clear_id();
  static const int kIDFieldNumber = 2;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional int64 TTL = 3;
  void clear_ttl();
  static const int kTTLFieldNumber = 3;
  ::google::protobuf::int64 ttl() const;
  void set_ttl(::google::protobuf::int64 value);

  // optional string error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseGrantResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 ttl_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static LeaseGrantResponse* default_instance_;
};
// -------------------------------------------------------------------

class LeaseRevokeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseRevokeRequest) */ {
 public:
  LeaseRevokeRequest();
  virtual ~LeaseRevokeRequest();

  LeaseRevokeRequest(const LeaseRevokeRequest& from);

  inline LeaseRevokeRequest& operator=(const LeaseRevokeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaseRevokeRequest& default_instance();

  void Swap(LeaseRevokeRequest* other);

  // implements Message ----------------------------------------------

  inline LeaseRevokeRequest* New() const { return New(NULL); }

  LeaseRevokeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaseRevokeRequest& from);
  void MergeFrom(const LeaseRevokeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaseRevokeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseRevokeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static LeaseRevokeRequest* default_instance_;
};
// -------------------------------------------------------------------

class LeaseRevokeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseRevokeResponse) */ {
 public:
  LeaseRevokeResponse();
  virtual ~LeaseRevokeResponse();

  LeaseRevokeResponse(const LeaseRevokeResponse& from);

  inline LeaseRevokeResponse& operator=(const LeaseRevokeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaseRevokeResponse& default_instance();

  void Swap(LeaseRevokeResponse* other);

  // implements Message ----------------------------------------------

  inline LeaseRevokeResponse* New() const { return New(NULL); }

  LeaseRevokeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaseRevokeResponse& from);
  void MergeFrom(const LeaseRevokeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaseRevokeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseRevokeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static LeaseRevokeResponse* default_instance_;
};
// -------------------------------------------------------------------

class LeaseKeepAliveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseKeepAliveRequest) */ {
 public:
  LeaseKeepAliveRequest();
  virtual ~LeaseKeepAliveRequest();

  LeaseKeepAliveRequest(const LeaseKeepAliveRequest& from);

  inline LeaseKeepAliveRequest& operator=(const LeaseKeepAliveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaseKeepAliveRequest& default_instance();

  void Swap(LeaseKeepAliveRequest* other);

  // implements Message ----------------------------------------------

  inline LeaseKeepAliveRequest* New() const { return New(NULL); }

  LeaseKeepAliveRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaseKeepAliveRequest& from);
  void MergeFrom(const LeaseKeepAliveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaseKeepAliveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseKeepAliveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static LeaseKeepAliveRequest* default_instance_;
};
// -------------------------------------------------------------------

class LeaseKeepAliveResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseKeepAliveResponse) */ {
 public:
  LeaseKeepAliveResponse();
  virtual ~LeaseKeepAliveResponse();

  LeaseKeepAliveResponse(const LeaseKeepAliveResponse& from);

  inline LeaseKeepAliveResponse& operator=(const LeaseKeepAliveResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaseKeepAliveResponse& default_instance();

  void Swap(LeaseKeepAliveResponse* other);

  // implements Message ----------------------------------------------

  inline LeaseKeepAliveResponse* New() const { return New(NULL); }

  LeaseKeepAliveResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaseKeepAliveResponse& from);
  void MergeFrom(const LeaseKeepAliveResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaseKeepAliveResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // optional int64 ID = 2;
  void clear_id();
  static const int kIDFieldNumber = 2;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional int64 TTL = 3;
  void clear_ttl();
  static const int kTTLFieldNumber = 3;
  ::google::protobuf::int64 ttl() const;
  void set_ttl(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseKeepAliveResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 ttl_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static LeaseKeepAliveResponse* default_instance_;
};
// -------------------------------------------------------------------

class LeaseTimeToLiveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseTimeToLiveRequest) */ {
 public:
  LeaseTimeToLiveRequest();
  virtual ~LeaseTimeToLiveRequest();

  LeaseTimeToLiveRequest(const LeaseTimeToLiveRequest& from);

  inline LeaseTimeToLiveRequest& operator=(const LeaseTimeToLiveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaseTimeToLiveRequest& default_instance();

  void Swap(LeaseTimeToLiveRequest* other);

  // implements Message ----------------------------------------------

  inline LeaseTimeToLiveRequest* New() const { return New(NULL); }

  LeaseTimeToLiveRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaseTimeToLiveRequest& from);
  void MergeFrom(const LeaseTimeToLiveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaseTimeToLiveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional bool keys = 2;
  void clear_keys();
  static const int kKeysFieldNumber = 2;
  bool keys() const;
  void set_keys(bool value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseTimeToLiveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  bool keys_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static LeaseTimeToLiveRequest* default_instance_;
};
// -------------------------------------------------------------------

class LeaseTimeToLiveResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.LeaseTimeToLiveResponse) */ {
 public:
  LeaseTimeToLiveResponse();
  virtual ~LeaseTimeToLiveResponse();

  LeaseTimeToLiveResponse(const LeaseTimeToLiveResponse& from);

  inline LeaseTimeToLiveResponse& operator=(const LeaseTimeToLiveResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaseTimeToLiveResponse& default_instance();

  void Swap(LeaseTimeToLiveResponse* other);

  // implements Message ----------------------------------------------

  inline LeaseTimeToLiveResponse* New() const { return New(NULL); }

  LeaseTimeToLiveResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaseTimeToLiveResponse& from);
  void MergeFrom(const LeaseTimeToLiveResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaseTimeToLiveResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // optional int64 ID = 2;
  void clear_id();
  static const int kIDFieldNumber = 2;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional int64 TTL = 3;
  void clear_ttl();
  static const int kTTLFieldNumber = 3;
  ::google::protobuf::int64 ttl() const;
  void set_ttl(::google::protobuf::int64 value);

  // optional int64 grantedTTL = 4;
  void clear_grantedttl();
  static const int kGrantedTTLFieldNumber = 4;
  ::google::protobuf::int64 grantedttl() const;
  void set_grantedttl(::google::protobuf::int64 value);

  // repeated bytes keys = 5;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 5;
  const ::std::string& keys(int index) const;
  ::std::string* mutable_keys(int index);
  void set_keys(int index, const ::std::string& value);
  void set_keys(int index, const char* value);
  void set_keys(int index, const void* value, size_t size);
  ::std::string* add_keys();
  void add_keys(const ::std::string& value);
  void add_keys(const char* value);
  void add_keys(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

  // @@protoc_insertion_point(class_scope:etcdserverpb.LeaseTimeToLiveResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 ttl_;
  ::google::protobuf::int64 grantedttl_;
  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static LeaseTimeToLiveResponse* default_instance_;
};
// -------------------------------------------------------------------

class Member : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.Member) */ {
 public:
  Member();
  virtual ~Member();

  Member(const Member& from);

  inline Member& operator=(const Member& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Member& default_instance();

  void Swap(Member* other);

  // implements Message ----------------------------------------------

  inline Member* New() const { return New(NULL); }

  Member* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Member& from);
  void MergeFrom(const Member& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Member* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated string peerURLs = 3;
  int peerurls_size() const;
  void clear_peerurls();
  static const int kPeerURLsFieldNumber = 3;
  const ::std::string& peerurls(int index) const;
  ::std::string* mutable_peerurls(int index);
  void set_peerurls(int index, const ::std::string& value);
  void set_peerurls(int index, const char* value);
  void set_peerurls(int index, const char* value, size_t size);
  ::std::string* add_peerurls();
  void add_peerurls(const ::std::string& value);
  void add_peerurls(const char* value);
  void add_peerurls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& peerurls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_peerurls();

  // repeated string clientURLs = 4;
  int clienturls_size() const;
  void clear_clienturls();
  static const int kClientURLsFieldNumber = 4;
  const ::std::string& clienturls(int index) const;
  ::std::string* mutable_clienturls(int index);
  void set_clienturls(int index, const ::std::string& value);
  void set_clienturls(int index, const char* value);
  void set_clienturls(int index, const char* value, size_t size);
  ::std::string* add_clienturls();
  void add_clienturls(const ::std::string& value);
  void add_clienturls(const char* value);
  void add_clienturls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& clienturls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_clienturls();

  // @@protoc_insertion_point(class_scope:etcdserverpb.Member)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> peerurls_;
  ::google::protobuf::RepeatedPtrField< ::std::string> clienturls_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static Member* default_instance_;
};
// -------------------------------------------------------------------

class MemberAddRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.MemberAddRequest) */ {
 public:
  MemberAddRequest();
  virtual ~MemberAddRequest();

  MemberAddRequest(const MemberAddRequest& from);

  inline MemberAddRequest& operator=(const MemberAddRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberAddRequest& default_instance();

  void Swap(MemberAddRequest* other);

  // implements Message ----------------------------------------------

  inline MemberAddRequest* New() const { return New(NULL); }

  MemberAddRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberAddRequest& from);
  void MergeFrom(const MemberAddRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MemberAddRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string peerURLs = 1;
  int peerurls_size() const;
  void clear_peerurls();
  static const int kPeerURLsFieldNumber = 1;
  const ::std::string& peerurls(int index) const;
  ::std::string* mutable_peerurls(int index);
  void set_peerurls(int index, const ::std::string& value);
  void set_peerurls(int index, const char* value);
  void set_peerurls(int index, const char* value, size_t size);
  ::std::string* add_peerurls();
  void add_peerurls(const ::std::string& value);
  void add_peerurls(const char* value);
  void add_peerurls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& peerurls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_peerurls();

  // @@protoc_insertion_point(class_scope:etcdserverpb.MemberAddRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> peerurls_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static MemberAddRequest* default_instance_;
};
// -------------------------------------------------------------------

class MemberAddResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.MemberAddResponse) */ {
 public:
  MemberAddResponse();
  virtual ~MemberAddResponse();

  MemberAddResponse(const MemberAddResponse& from);

  inline MemberAddResponse& operator=(const MemberAddResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberAddResponse& default_instance();

  void Swap(MemberAddResponse* other);

  // implements Message ----------------------------------------------

  inline MemberAddResponse* New() const { return New(NULL); }

  MemberAddResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberAddResponse& from);
  void MergeFrom(const MemberAddResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MemberAddResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // optional .etcdserverpb.Member member = 2;
  bool has_member() const;
  void clear_member();
  static const int kMemberFieldNumber = 2;
  const ::etcdserverpb::Member& member() const;
  ::etcdserverpb::Member* mutable_member();
  ::etcdserverpb::Member* release_member();
  void set_allocated_member(::etcdserverpb::Member* member);

  // @@protoc_insertion_point(class_scope:etcdserverpb.MemberAddResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::etcdserverpb::Member* member_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static MemberAddResponse* default_instance_;
};
// -------------------------------------------------------------------

class MemberRemoveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.MemberRemoveRequest) */ {
 public:
  MemberRemoveRequest();
  virtual ~MemberRemoveRequest();

  MemberRemoveRequest(const MemberRemoveRequest& from);

  inline MemberRemoveRequest& operator=(const MemberRemoveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberRemoveRequest& default_instance();

  void Swap(MemberRemoveRequest* other);

  // implements Message ----------------------------------------------

  inline MemberRemoveRequest* New() const { return New(NULL); }

  MemberRemoveRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberRemoveRequest& from);
  void MergeFrom(const MemberRemoveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MemberRemoveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.MemberRemoveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static MemberRemoveRequest* default_instance_;
};
// -------------------------------------------------------------------

class MemberRemoveResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.MemberRemoveResponse) */ {
 public:
  MemberRemoveResponse();
  virtual ~MemberRemoveResponse();

  MemberRemoveResponse(const MemberRemoveResponse& from);

  inline MemberRemoveResponse& operator=(const MemberRemoveResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberRemoveResponse& default_instance();

  void Swap(MemberRemoveResponse* other);

  // implements Message ----------------------------------------------

  inline MemberRemoveResponse* New() const { return New(NULL); }

  MemberRemoveResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberRemoveResponse& from);
  void MergeFrom(const MemberRemoveResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MemberRemoveResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.MemberRemoveResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static MemberRemoveResponse* default_instance_;
};
// -------------------------------------------------------------------

class MemberUpdateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.MemberUpdateRequest) */ {
 public:
  MemberUpdateRequest();
  virtual ~MemberUpdateRequest();

  MemberUpdateRequest(const MemberUpdateRequest& from);

  inline MemberUpdateRequest& operator=(const MemberUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberUpdateRequest& default_instance();

  void Swap(MemberUpdateRequest* other);

  // implements Message ----------------------------------------------

  inline MemberUpdateRequest* New() const { return New(NULL); }

  MemberUpdateRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberUpdateRequest& from);
  void MergeFrom(const MemberUpdateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MemberUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // repeated string peerURLs = 2;
  int peerurls_size() const;
  void clear_peerurls();
  static const int kPeerURLsFieldNumber = 2;
  const ::std::string& peerurls(int index) const;
  ::std::string* mutable_peerurls(int index);
  void set_peerurls(int index, const ::std::string& value);
  void set_peerurls(int index, const char* value);
  void set_peerurls(int index, const char* value, size_t size);
  ::std::string* add_peerurls();
  void add_peerurls(const ::std::string& value);
  void add_peerurls(const char* value);
  void add_peerurls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& peerurls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_peerurls();

  // @@protoc_insertion_point(class_scope:etcdserverpb.MemberUpdateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> peerurls_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static MemberUpdateRequest* default_instance_;
};
// -------------------------------------------------------------------

class MemberUpdateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.MemberUpdateResponse) */ {
 public:
  MemberUpdateResponse();
  virtual ~MemberUpdateResponse();

  MemberUpdateResponse(const MemberUpdateResponse& from);

  inline MemberUpdateResponse& operator=(const MemberUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberUpdateResponse& default_instance();

  void Swap(MemberUpdateResponse* other);

  // implements Message ----------------------------------------------

  inline MemberUpdateResponse* New() const { return New(NULL); }

  MemberUpdateResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberUpdateResponse& from);
  void MergeFrom(const MemberUpdateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MemberUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.MemberUpdateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static MemberUpdateResponse* default_instance_;
};
// -------------------------------------------------------------------

class MemberListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.MemberListRequest) */ {
 public:
  MemberListRequest();
  virtual ~MemberListRequest();

  MemberListRequest(const MemberListRequest& from);

  inline MemberListRequest& operator=(const MemberListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberListRequest& default_instance();

  void Swap(MemberListRequest* other);

  // implements Message ----------------------------------------------

  inline MemberListRequest* New() const { return New(NULL); }

  MemberListRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberListRequest& from);
  void MergeFrom(const MemberListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MemberListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:etcdserverpb.MemberListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static MemberListRequest* default_instance_;
};
// -------------------------------------------------------------------

class MemberListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.MemberListResponse) */ {
 public:
  MemberListResponse();
  virtual ~MemberListResponse();

  MemberListResponse(const MemberListResponse& from);

  inline MemberListResponse& operator=(const MemberListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberListResponse& default_instance();

  void Swap(MemberListResponse* other);

  // implements Message ----------------------------------------------

  inline MemberListResponse* New() const { return New(NULL); }

  MemberListResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberListResponse& from);
  void MergeFrom(const MemberListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MemberListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // repeated .etcdserverpb.Member members = 2;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 2;
  const ::etcdserverpb::Member& members(int index) const;
  ::etcdserverpb::Member* mutable_members(int index);
  ::etcdserverpb::Member* add_members();
  ::google::protobuf::RepeatedPtrField< ::etcdserverpb::Member >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::etcdserverpb::Member >&
      members() const;

  // @@protoc_insertion_point(class_scope:etcdserverpb.MemberListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::RepeatedPtrField< ::etcdserverpb::Member > members_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static MemberListResponse* default_instance_;
};
// -------------------------------------------------------------------

class DefragmentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.DefragmentRequest) */ {
 public:
  DefragmentRequest();
  virtual ~DefragmentRequest();

  DefragmentRequest(const DefragmentRequest& from);

  inline DefragmentRequest& operator=(const DefragmentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DefragmentRequest& default_instance();

  void Swap(DefragmentRequest* other);

  // implements Message ----------------------------------------------

  inline DefragmentRequest* New() const { return New(NULL); }

  DefragmentRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DefragmentRequest& from);
  void MergeFrom(const DefragmentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DefragmentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:etcdserverpb.DefragmentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static DefragmentRequest* default_instance_;
};
// -------------------------------------------------------------------

class DefragmentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.DefragmentResponse) */ {
 public:
  DefragmentResponse();
  virtual ~DefragmentResponse();

  DefragmentResponse(const DefragmentResponse& from);

  inline DefragmentResponse& operator=(const DefragmentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DefragmentResponse& default_instance();

  void Swap(DefragmentResponse* other);

  // implements Message ----------------------------------------------

  inline DefragmentResponse* New() const { return New(NULL); }

  DefragmentResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DefragmentResponse& from);
  void MergeFrom(const DefragmentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DefragmentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.DefragmentResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static DefragmentResponse* default_instance_;
};
// -------------------------------------------------------------------

class AlarmRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AlarmRequest) */ {
 public:
  AlarmRequest();
  virtual ~AlarmRequest();

  AlarmRequest(const AlarmRequest& from);

  inline AlarmRequest& operator=(const AlarmRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmRequest& default_instance();

  void Swap(AlarmRequest* other);

  // implements Message ----------------------------------------------

  inline AlarmRequest* New() const { return New(NULL); }

  AlarmRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmRequest& from);
  void MergeFrom(const AlarmRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AlarmRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AlarmRequest_AlarmAction AlarmAction;
  static const AlarmAction GET =
    AlarmRequest_AlarmAction_GET;
  static const AlarmAction ACTIVATE =
    AlarmRequest_AlarmAction_ACTIVATE;
  static const AlarmAction DEACTIVATE =
    AlarmRequest_AlarmAction_DEACTIVATE;
  static inline bool AlarmAction_IsValid(int value) {
    return AlarmRequest_AlarmAction_IsValid(value);
  }
  static const AlarmAction AlarmAction_MIN =
    AlarmRequest_AlarmAction_AlarmAction_MIN;
  static const AlarmAction AlarmAction_MAX =
    AlarmRequest_AlarmAction_AlarmAction_MAX;
  static const int AlarmAction_ARRAYSIZE =
    AlarmRequest_AlarmAction_AlarmAction_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AlarmAction_descriptor() {
    return AlarmRequest_AlarmAction_descriptor();
  }
  static inline const ::std::string& AlarmAction_Name(AlarmAction value) {
    return AlarmRequest_AlarmAction_Name(value);
  }
  static inline bool AlarmAction_Parse(const ::std::string& name,
      AlarmAction* value) {
    return AlarmRequest_AlarmAction_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.AlarmRequest.AlarmAction action = 1;
  void clear_action();
  static const int kActionFieldNumber = 1;
  ::etcdserverpb::AlarmRequest_AlarmAction action() const;
  void set_action(::etcdserverpb::AlarmRequest_AlarmAction value);

  // optional uint64 memberID = 2;
  void clear_memberid();
  static const int kMemberIDFieldNumber = 2;
  ::google::protobuf::uint64 memberid() const;
  void set_memberid(::google::protobuf::uint64 value);

  // optional .etcdserverpb.AlarmType alarm = 3;
  void clear_alarm();
  static const int kAlarmFieldNumber = 3;
  ::etcdserverpb::AlarmType alarm() const;
  void set_alarm(::etcdserverpb::AlarmType value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AlarmRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 memberid_;
  int action_;
  int alarm_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AlarmRequest* default_instance_;
};
// -------------------------------------------------------------------

class AlarmMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AlarmMember) */ {
 public:
  AlarmMember();
  virtual ~AlarmMember();

  AlarmMember(const AlarmMember& from);

  inline AlarmMember& operator=(const AlarmMember& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmMember& default_instance();

  void Swap(AlarmMember* other);

  // implements Message ----------------------------------------------

  inline AlarmMember* New() const { return New(NULL); }

  AlarmMember* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmMember& from);
  void MergeFrom(const AlarmMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AlarmMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 memberID = 1;
  void clear_memberid();
  static const int kMemberIDFieldNumber = 1;
  ::google::protobuf::uint64 memberid() const;
  void set_memberid(::google::protobuf::uint64 value);

  // optional .etcdserverpb.AlarmType alarm = 2;
  void clear_alarm();
  static const int kAlarmFieldNumber = 2;
  ::etcdserverpb::AlarmType alarm() const;
  void set_alarm(::etcdserverpb::AlarmType value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AlarmMember)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 memberid_;
  int alarm_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AlarmMember* default_instance_;
};
// -------------------------------------------------------------------

class AlarmResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AlarmResponse) */ {
 public:
  AlarmResponse();
  virtual ~AlarmResponse();

  AlarmResponse(const AlarmResponse& from);

  inline AlarmResponse& operator=(const AlarmResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmResponse& default_instance();

  void Swap(AlarmResponse* other);

  // implements Message ----------------------------------------------

  inline AlarmResponse* New() const { return New(NULL); }

  AlarmResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmResponse& from);
  void MergeFrom(const AlarmResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AlarmResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // repeated .etcdserverpb.AlarmMember alarms = 2;
  int alarms_size() const;
  void clear_alarms();
  static const int kAlarmsFieldNumber = 2;
  const ::etcdserverpb::AlarmMember& alarms(int index) const;
  ::etcdserverpb::AlarmMember* mutable_alarms(int index);
  ::etcdserverpb::AlarmMember* add_alarms();
  ::google::protobuf::RepeatedPtrField< ::etcdserverpb::AlarmMember >*
      mutable_alarms();
  const ::google::protobuf::RepeatedPtrField< ::etcdserverpb::AlarmMember >&
      alarms() const;

  // @@protoc_insertion_point(class_scope:etcdserverpb.AlarmResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::RepeatedPtrField< ::etcdserverpb::AlarmMember > alarms_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AlarmResponse* default_instance_;
};
// -------------------------------------------------------------------

class StatusRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.StatusRequest) */ {
 public:
  StatusRequest();
  virtual ~StatusRequest();

  StatusRequest(const StatusRequest& from);

  inline StatusRequest& operator=(const StatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusRequest& default_instance();

  void Swap(StatusRequest* other);

  // implements Message ----------------------------------------------

  inline StatusRequest* New() const { return New(NULL); }

  StatusRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusRequest& from);
  void MergeFrom(const StatusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:etcdserverpb.StatusRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static StatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class StatusResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.StatusResponse) */ {
 public:
  StatusResponse();
  virtual ~StatusResponse();

  StatusResponse(const StatusResponse& from);

  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusResponse& default_instance();

  void Swap(StatusResponse* other);

  // implements Message ----------------------------------------------

  inline StatusResponse* New() const { return New(NULL); }

  StatusResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatusResponse& from);
  void MergeFrom(const StatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // optional string version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional int64 dbSize = 3;
  void clear_dbsize();
  static const int kDbSizeFieldNumber = 3;
  ::google::protobuf::int64 dbsize() const;
  void set_dbsize(::google::protobuf::int64 value);

  // optional uint64 leader = 4;
  void clear_leader();
  static const int kLeaderFieldNumber = 4;
  ::google::protobuf::uint64 leader() const;
  void set_leader(::google::protobuf::uint64 value);

  // optional uint64 raftIndex = 5;
  void clear_raftindex();
  static const int kRaftIndexFieldNumber = 5;
  ::google::protobuf::uint64 raftindex() const;
  void set_raftindex(::google::protobuf::uint64 value);

  // optional uint64 raftTerm = 6;
  void clear_raftterm();
  static const int kRaftTermFieldNumber = 6;
  ::google::protobuf::uint64 raftterm() const;
  void set_raftterm(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:etcdserverpb.StatusResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::int64 dbsize_;
  ::google::protobuf::uint64 leader_;
  ::google::protobuf::uint64 raftindex_;
  ::google::protobuf::uint64 raftterm_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static StatusResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthEnableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthEnableRequest) */ {
 public:
  AuthEnableRequest();
  virtual ~AuthEnableRequest();

  AuthEnableRequest(const AuthEnableRequest& from);

  inline AuthEnableRequest& operator=(const AuthEnableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthEnableRequest& default_instance();

  void Swap(AuthEnableRequest* other);

  // implements Message ----------------------------------------------

  inline AuthEnableRequest* New() const { return New(NULL); }

  AuthEnableRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthEnableRequest& from);
  void MergeFrom(const AuthEnableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthEnableRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthEnableRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthEnableRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthDisableRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthDisableRequest) */ {
 public:
  AuthDisableRequest();
  virtual ~AuthDisableRequest();

  AuthDisableRequest(const AuthDisableRequest& from);

  inline AuthDisableRequest& operator=(const AuthDisableRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthDisableRequest& default_instance();

  void Swap(AuthDisableRequest* other);

  // implements Message ----------------------------------------------

  inline AuthDisableRequest* New() const { return New(NULL); }

  AuthDisableRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthDisableRequest& from);
  void MergeFrom(const AuthDisableRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthDisableRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthDisableRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthDisableRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthenticateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthenticateRequest) */ {
 public:
  AuthenticateRequest();
  virtual ~AuthenticateRequest();

  AuthenticateRequest(const AuthenticateRequest& from);

  inline AuthenticateRequest& operator=(const AuthenticateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticateRequest& default_instance();

  void Swap(AuthenticateRequest* other);

  // implements Message ----------------------------------------------

  inline AuthenticateRequest* New() const { return New(NULL); }

  AuthenticateRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthenticateRequest& from);
  void MergeFrom(const AuthenticateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthenticateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthenticateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthenticateRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserAddRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserAddRequest) */ {
 public:
  AuthUserAddRequest();
  virtual ~AuthUserAddRequest();

  AuthUserAddRequest(const AuthUserAddRequest& from);

  inline AuthUserAddRequest& operator=(const AuthUserAddRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserAddRequest& default_instance();

  void Swap(AuthUserAddRequest* other);

  // implements Message ----------------------------------------------

  inline AuthUserAddRequest* New() const { return New(NULL); }

  AuthUserAddRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserAddRequest& from);
  void MergeFrom(const AuthUserAddRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserAddRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserAddRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserAddRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserGetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserGetRequest) */ {
 public:
  AuthUserGetRequest();
  virtual ~AuthUserGetRequest();

  AuthUserGetRequest(const AuthUserGetRequest& from);

  inline AuthUserGetRequest& operator=(const AuthUserGetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserGetRequest& default_instance();

  void Swap(AuthUserGetRequest* other);

  // implements Message ----------------------------------------------

  inline AuthUserGetRequest* New() const { return New(NULL); }

  AuthUserGetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserGetRequest& from);
  void MergeFrom(const AuthUserGetRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserGetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserGetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserGetRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserDeleteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserDeleteRequest) */ {
 public:
  AuthUserDeleteRequest();
  virtual ~AuthUserDeleteRequest();

  AuthUserDeleteRequest(const AuthUserDeleteRequest& from);

  inline AuthUserDeleteRequest& operator=(const AuthUserDeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserDeleteRequest& default_instance();

  void Swap(AuthUserDeleteRequest* other);

  // implements Message ----------------------------------------------

  inline AuthUserDeleteRequest* New() const { return New(NULL); }

  AuthUserDeleteRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserDeleteRequest& from);
  void MergeFrom(const AuthUserDeleteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserDeleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserDeleteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserDeleteRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserChangePasswordRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserChangePasswordRequest) */ {
 public:
  AuthUserChangePasswordRequest();
  virtual ~AuthUserChangePasswordRequest();

  AuthUserChangePasswordRequest(const AuthUserChangePasswordRequest& from);

  inline AuthUserChangePasswordRequest& operator=(const AuthUserChangePasswordRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserChangePasswordRequest& default_instance();

  void Swap(AuthUserChangePasswordRequest* other);

  // implements Message ----------------------------------------------

  inline AuthUserChangePasswordRequest* New() const { return New(NULL); }

  AuthUserChangePasswordRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserChangePasswordRequest& from);
  void MergeFrom(const AuthUserChangePasswordRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserChangePasswordRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserChangePasswordRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserChangePasswordRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserGrantRoleRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserGrantRoleRequest) */ {
 public:
  AuthUserGrantRoleRequest();
  virtual ~AuthUserGrantRoleRequest();

  AuthUserGrantRoleRequest(const AuthUserGrantRoleRequest& from);

  inline AuthUserGrantRoleRequest& operator=(const AuthUserGrantRoleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserGrantRoleRequest& default_instance();

  void Swap(AuthUserGrantRoleRequest* other);

  // implements Message ----------------------------------------------

  inline AuthUserGrantRoleRequest* New() const { return New(NULL); }

  AuthUserGrantRoleRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserGrantRoleRequest& from);
  void MergeFrom(const AuthUserGrantRoleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserGrantRoleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user = 1;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // optional string role = 2;
  void clear_role();
  static const int kRoleFieldNumber = 2;
  const ::std::string& role() const;
  void set_role(const ::std::string& value);
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  ::std::string* mutable_role();
  ::std::string* release_role();
  void set_allocated_role(::std::string* role);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserGrantRoleRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr role_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserGrantRoleRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserRevokeRoleRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserRevokeRoleRequest) */ {
 public:
  AuthUserRevokeRoleRequest();
  virtual ~AuthUserRevokeRoleRequest();

  AuthUserRevokeRoleRequest(const AuthUserRevokeRoleRequest& from);

  inline AuthUserRevokeRoleRequest& operator=(const AuthUserRevokeRoleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserRevokeRoleRequest& default_instance();

  void Swap(AuthUserRevokeRoleRequest* other);

  // implements Message ----------------------------------------------

  inline AuthUserRevokeRoleRequest* New() const { return New(NULL); }

  AuthUserRevokeRoleRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserRevokeRoleRequest& from);
  void MergeFrom(const AuthUserRevokeRoleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserRevokeRoleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string role = 2;
  void clear_role();
  static const int kRoleFieldNumber = 2;
  const ::std::string& role() const;
  void set_role(const ::std::string& value);
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  ::std::string* mutable_role();
  ::std::string* release_role();
  void set_allocated_role(::std::string* role);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserRevokeRoleRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr role_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserRevokeRoleRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthRoleAddRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthRoleAddRequest) */ {
 public:
  AuthRoleAddRequest();
  virtual ~AuthRoleAddRequest();

  AuthRoleAddRequest(const AuthRoleAddRequest& from);

  inline AuthRoleAddRequest& operator=(const AuthRoleAddRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRoleAddRequest& default_instance();

  void Swap(AuthRoleAddRequest* other);

  // implements Message ----------------------------------------------

  inline AuthRoleAddRequest* New() const { return New(NULL); }

  AuthRoleAddRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRoleAddRequest& from);
  void MergeFrom(const AuthRoleAddRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRoleAddRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthRoleAddRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthRoleAddRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthRoleGetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthRoleGetRequest) */ {
 public:
  AuthRoleGetRequest();
  virtual ~AuthRoleGetRequest();

  AuthRoleGetRequest(const AuthRoleGetRequest& from);

  inline AuthRoleGetRequest& operator=(const AuthRoleGetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRoleGetRequest& default_instance();

  void Swap(AuthRoleGetRequest* other);

  // implements Message ----------------------------------------------

  inline AuthRoleGetRequest* New() const { return New(NULL); }

  AuthRoleGetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRoleGetRequest& from);
  void MergeFrom(const AuthRoleGetRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRoleGetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string role = 1;
  void clear_role();
  static const int kRoleFieldNumber = 1;
  const ::std::string& role() const;
  void set_role(const ::std::string& value);
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  ::std::string* mutable_role();
  ::std::string* release_role();
  void set_allocated_role(::std::string* role);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthRoleGetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr role_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthRoleGetRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserListRequest) */ {
 public:
  AuthUserListRequest();
  virtual ~AuthUserListRequest();

  AuthUserListRequest(const AuthUserListRequest& from);

  inline AuthUserListRequest& operator=(const AuthUserListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserListRequest& default_instance();

  void Swap(AuthUserListRequest* other);

  // implements Message ----------------------------------------------

  inline AuthUserListRequest* New() const { return New(NULL); }

  AuthUserListRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserListRequest& from);
  void MergeFrom(const AuthUserListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserListRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthRoleListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthRoleListRequest) */ {
 public:
  AuthRoleListRequest();
  virtual ~AuthRoleListRequest();

  AuthRoleListRequest(const AuthRoleListRequest& from);

  inline AuthRoleListRequest& operator=(const AuthRoleListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRoleListRequest& default_instance();

  void Swap(AuthRoleListRequest* other);

  // implements Message ----------------------------------------------

  inline AuthRoleListRequest* New() const { return New(NULL); }

  AuthRoleListRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRoleListRequest& from);
  void MergeFrom(const AuthRoleListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRoleListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthRoleListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthRoleListRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthRoleDeleteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthRoleDeleteRequest) */ {
 public:
  AuthRoleDeleteRequest();
  virtual ~AuthRoleDeleteRequest();

  AuthRoleDeleteRequest(const AuthRoleDeleteRequest& from);

  inline AuthRoleDeleteRequest& operator=(const AuthRoleDeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRoleDeleteRequest& default_instance();

  void Swap(AuthRoleDeleteRequest* other);

  // implements Message ----------------------------------------------

  inline AuthRoleDeleteRequest* New() const { return New(NULL); }

  AuthRoleDeleteRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRoleDeleteRequest& from);
  void MergeFrom(const AuthRoleDeleteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRoleDeleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string role = 1;
  void clear_role();
  static const int kRoleFieldNumber = 1;
  const ::std::string& role() const;
  void set_role(const ::std::string& value);
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  ::std::string* mutable_role();
  ::std::string* release_role();
  void set_allocated_role(::std::string* role);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthRoleDeleteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr role_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthRoleDeleteRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthRoleGrantPermissionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthRoleGrantPermissionRequest) */ {
 public:
  AuthRoleGrantPermissionRequest();
  virtual ~AuthRoleGrantPermissionRequest();

  AuthRoleGrantPermissionRequest(const AuthRoleGrantPermissionRequest& from);

  inline AuthRoleGrantPermissionRequest& operator=(const AuthRoleGrantPermissionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRoleGrantPermissionRequest& default_instance();

  void Swap(AuthRoleGrantPermissionRequest* other);

  // implements Message ----------------------------------------------

  inline AuthRoleGrantPermissionRequest* New() const { return New(NULL); }

  AuthRoleGrantPermissionRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRoleGrantPermissionRequest& from);
  void MergeFrom(const AuthRoleGrantPermissionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRoleGrantPermissionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .authpb.Permission perm = 2;
  bool has_perm() const;
  void clear_perm();
  static const int kPermFieldNumber = 2;
  const ::authpb::Permission& perm() const;
  ::authpb::Permission* mutable_perm();
  ::authpb::Permission* release_perm();
  void set_allocated_perm(::authpb::Permission* perm);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthRoleGrantPermissionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::authpb::Permission* perm_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthRoleGrantPermissionRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthRoleRevokePermissionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthRoleRevokePermissionRequest) */ {
 public:
  AuthRoleRevokePermissionRequest();
  virtual ~AuthRoleRevokePermissionRequest();

  AuthRoleRevokePermissionRequest(const AuthRoleRevokePermissionRequest& from);

  inline AuthRoleRevokePermissionRequest& operator=(const AuthRoleRevokePermissionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRoleRevokePermissionRequest& default_instance();

  void Swap(AuthRoleRevokePermissionRequest* other);

  // implements Message ----------------------------------------------

  inline AuthRoleRevokePermissionRequest* New() const { return New(NULL); }

  AuthRoleRevokePermissionRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRoleRevokePermissionRequest& from);
  void MergeFrom(const AuthRoleRevokePermissionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRoleRevokePermissionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string role = 1;
  void clear_role();
  static const int kRoleFieldNumber = 1;
  const ::std::string& role() const;
  void set_role(const ::std::string& value);
  void set_role(const char* value);
  void set_role(const char* value, size_t size);
  ::std::string* mutable_role();
  ::std::string* release_role();
  void set_allocated_role(::std::string* role);

  // optional string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string range_end = 3;
  void clear_range_end();
  static const int kRangeEndFieldNumber = 3;
  const ::std::string& range_end() const;
  void set_range_end(const ::std::string& value);
  void set_range_end(const char* value);
  void set_range_end(const char* value, size_t size);
  ::std::string* mutable_range_end();
  ::std::string* release_range_end();
  void set_allocated_range_end(::std::string* range_end);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthRoleRevokePermissionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr role_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr range_end_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthRoleRevokePermissionRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthEnableResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthEnableResponse) */ {
 public:
  AuthEnableResponse();
  virtual ~AuthEnableResponse();

  AuthEnableResponse(const AuthEnableResponse& from);

  inline AuthEnableResponse& operator=(const AuthEnableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthEnableResponse& default_instance();

  void Swap(AuthEnableResponse* other);

  // implements Message ----------------------------------------------

  inline AuthEnableResponse* New() const { return New(NULL); }

  AuthEnableResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthEnableResponse& from);
  void MergeFrom(const AuthEnableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthEnableResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthEnableResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthEnableResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthDisableResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthDisableResponse) */ {
 public:
  AuthDisableResponse();
  virtual ~AuthDisableResponse();

  AuthDisableResponse(const AuthDisableResponse& from);

  inline AuthDisableResponse& operator=(const AuthDisableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthDisableResponse& default_instance();

  void Swap(AuthDisableResponse* other);

  // implements Message ----------------------------------------------

  inline AuthDisableResponse* New() const { return New(NULL); }

  AuthDisableResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthDisableResponse& from);
  void MergeFrom(const AuthDisableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthDisableResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthDisableResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthDisableResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthenticateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthenticateResponse) */ {
 public:
  AuthenticateResponse();
  virtual ~AuthenticateResponse();

  AuthenticateResponse(const AuthenticateResponse& from);

  inline AuthenticateResponse& operator=(const AuthenticateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticateResponse& default_instance();

  void Swap(AuthenticateResponse* other);

  // implements Message ----------------------------------------------

  inline AuthenticateResponse* New() const { return New(NULL); }

  AuthenticateResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthenticateResponse& from);
  void MergeFrom(const AuthenticateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthenticateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // optional string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthenticateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthenticateResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserAddResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserAddResponse) */ {
 public:
  AuthUserAddResponse();
  virtual ~AuthUserAddResponse();

  AuthUserAddResponse(const AuthUserAddResponse& from);

  inline AuthUserAddResponse& operator=(const AuthUserAddResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserAddResponse& default_instance();

  void Swap(AuthUserAddResponse* other);

  // implements Message ----------------------------------------------

  inline AuthUserAddResponse* New() const { return New(NULL); }

  AuthUserAddResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserAddResponse& from);
  void MergeFrom(const AuthUserAddResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserAddResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserAddResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserAddResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserGetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserGetResponse) */ {
 public:
  AuthUserGetResponse();
  virtual ~AuthUserGetResponse();

  AuthUserGetResponse(const AuthUserGetResponse& from);

  inline AuthUserGetResponse& operator=(const AuthUserGetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserGetResponse& default_instance();

  void Swap(AuthUserGetResponse* other);

  // implements Message ----------------------------------------------

  inline AuthUserGetResponse* New() const { return New(NULL); }

  AuthUserGetResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserGetResponse& from);
  void MergeFrom(const AuthUserGetResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserGetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // repeated string roles = 2;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 2;
  const ::std::string& roles(int index) const;
  ::std::string* mutable_roles(int index);
  void set_roles(int index, const ::std::string& value);
  void set_roles(int index, const char* value);
  void set_roles(int index, const char* value, size_t size);
  ::std::string* add_roles();
  void add_roles(const ::std::string& value);
  void add_roles(const char* value);
  void add_roles(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& roles() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_roles();

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserGetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::RepeatedPtrField< ::std::string> roles_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserGetResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserDeleteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserDeleteResponse) */ {
 public:
  AuthUserDeleteResponse();
  virtual ~AuthUserDeleteResponse();

  AuthUserDeleteResponse(const AuthUserDeleteResponse& from);

  inline AuthUserDeleteResponse& operator=(const AuthUserDeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserDeleteResponse& default_instance();

  void Swap(AuthUserDeleteResponse* other);

  // implements Message ----------------------------------------------

  inline AuthUserDeleteResponse* New() const { return New(NULL); }

  AuthUserDeleteResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserDeleteResponse& from);
  void MergeFrom(const AuthUserDeleteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserDeleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserDeleteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserDeleteResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserChangePasswordResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserChangePasswordResponse) */ {
 public:
  AuthUserChangePasswordResponse();
  virtual ~AuthUserChangePasswordResponse();

  AuthUserChangePasswordResponse(const AuthUserChangePasswordResponse& from);

  inline AuthUserChangePasswordResponse& operator=(const AuthUserChangePasswordResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserChangePasswordResponse& default_instance();

  void Swap(AuthUserChangePasswordResponse* other);

  // implements Message ----------------------------------------------

  inline AuthUserChangePasswordResponse* New() const { return New(NULL); }

  AuthUserChangePasswordResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserChangePasswordResponse& from);
  void MergeFrom(const AuthUserChangePasswordResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserChangePasswordResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserChangePasswordResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserChangePasswordResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserGrantRoleResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserGrantRoleResponse) */ {
 public:
  AuthUserGrantRoleResponse();
  virtual ~AuthUserGrantRoleResponse();

  AuthUserGrantRoleResponse(const AuthUserGrantRoleResponse& from);

  inline AuthUserGrantRoleResponse& operator=(const AuthUserGrantRoleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserGrantRoleResponse& default_instance();

  void Swap(AuthUserGrantRoleResponse* other);

  // implements Message ----------------------------------------------

  inline AuthUserGrantRoleResponse* New() const { return New(NULL); }

  AuthUserGrantRoleResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserGrantRoleResponse& from);
  void MergeFrom(const AuthUserGrantRoleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserGrantRoleResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserGrantRoleResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserGrantRoleResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserRevokeRoleResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserRevokeRoleResponse) */ {
 public:
  AuthUserRevokeRoleResponse();
  virtual ~AuthUserRevokeRoleResponse();

  AuthUserRevokeRoleResponse(const AuthUserRevokeRoleResponse& from);

  inline AuthUserRevokeRoleResponse& operator=(const AuthUserRevokeRoleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserRevokeRoleResponse& default_instance();

  void Swap(AuthUserRevokeRoleResponse* other);

  // implements Message ----------------------------------------------

  inline AuthUserRevokeRoleResponse* New() const { return New(NULL); }

  AuthUserRevokeRoleResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserRevokeRoleResponse& from);
  void MergeFrom(const AuthUserRevokeRoleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserRevokeRoleResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserRevokeRoleResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserRevokeRoleResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthRoleAddResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthRoleAddResponse) */ {
 public:
  AuthRoleAddResponse();
  virtual ~AuthRoleAddResponse();

  AuthRoleAddResponse(const AuthRoleAddResponse& from);

  inline AuthRoleAddResponse& operator=(const AuthRoleAddResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRoleAddResponse& default_instance();

  void Swap(AuthRoleAddResponse* other);

  // implements Message ----------------------------------------------

  inline AuthRoleAddResponse* New() const { return New(NULL); }

  AuthRoleAddResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRoleAddResponse& from);
  void MergeFrom(const AuthRoleAddResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRoleAddResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthRoleAddResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthRoleAddResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthRoleGetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthRoleGetResponse) */ {
 public:
  AuthRoleGetResponse();
  virtual ~AuthRoleGetResponse();

  AuthRoleGetResponse(const AuthRoleGetResponse& from);

  inline AuthRoleGetResponse& operator=(const AuthRoleGetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRoleGetResponse& default_instance();

  void Swap(AuthRoleGetResponse* other);

  // implements Message ----------------------------------------------

  inline AuthRoleGetResponse* New() const { return New(NULL); }

  AuthRoleGetResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRoleGetResponse& from);
  void MergeFrom(const AuthRoleGetResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRoleGetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // repeated .authpb.Permission perm = 2;
  int perm_size() const;
  void clear_perm();
  static const int kPermFieldNumber = 2;
  const ::authpb::Permission& perm(int index) const;
  ::authpb::Permission* mutable_perm(int index);
  ::authpb::Permission* add_perm();
  ::google::protobuf::RepeatedPtrField< ::authpb::Permission >*
      mutable_perm();
  const ::google::protobuf::RepeatedPtrField< ::authpb::Permission >&
      perm() const;

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthRoleGetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::RepeatedPtrField< ::authpb::Permission > perm_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthRoleGetResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthRoleListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthRoleListResponse) */ {
 public:
  AuthRoleListResponse();
  virtual ~AuthRoleListResponse();

  AuthRoleListResponse(const AuthRoleListResponse& from);

  inline AuthRoleListResponse& operator=(const AuthRoleListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRoleListResponse& default_instance();

  void Swap(AuthRoleListResponse* other);

  // implements Message ----------------------------------------------

  inline AuthRoleListResponse* New() const { return New(NULL); }

  AuthRoleListResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRoleListResponse& from);
  void MergeFrom(const AuthRoleListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRoleListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // repeated string roles = 2;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 2;
  const ::std::string& roles(int index) const;
  ::std::string* mutable_roles(int index);
  void set_roles(int index, const ::std::string& value);
  void set_roles(int index, const char* value);
  void set_roles(int index, const char* value, size_t size);
  ::std::string* add_roles();
  void add_roles(const ::std::string& value);
  void add_roles(const char* value);
  void add_roles(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& roles() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_roles();

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthRoleListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::RepeatedPtrField< ::std::string> roles_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthRoleListResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthUserListResponse) */ {
 public:
  AuthUserListResponse();
  virtual ~AuthUserListResponse();

  AuthUserListResponse(const AuthUserListResponse& from);

  inline AuthUserListResponse& operator=(const AuthUserListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserListResponse& default_instance();

  void Swap(AuthUserListResponse* other);

  // implements Message ----------------------------------------------

  inline AuthUserListResponse* New() const { return New(NULL); }

  AuthUserListResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserListResponse& from);
  void MergeFrom(const AuthUserListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthUserListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // repeated string users = 2;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 2;
  const ::std::string& users(int index) const;
  ::std::string* mutable_users(int index);
  void set_users(int index, const ::std::string& value);
  void set_users(int index, const char* value);
  void set_users(int index, const char* value, size_t size);
  ::std::string* add_users();
  void add_users(const ::std::string& value);
  void add_users(const char* value);
  void add_users(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& users() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_users();

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthUserListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  ::google::protobuf::RepeatedPtrField< ::std::string> users_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthUserListResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthRoleDeleteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthRoleDeleteResponse) */ {
 public:
  AuthRoleDeleteResponse();
  virtual ~AuthRoleDeleteResponse();

  AuthRoleDeleteResponse(const AuthRoleDeleteResponse& from);

  inline AuthRoleDeleteResponse& operator=(const AuthRoleDeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRoleDeleteResponse& default_instance();

  void Swap(AuthRoleDeleteResponse* other);

  // implements Message ----------------------------------------------

  inline AuthRoleDeleteResponse* New() const { return New(NULL); }

  AuthRoleDeleteResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRoleDeleteResponse& from);
  void MergeFrom(const AuthRoleDeleteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRoleDeleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthRoleDeleteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthRoleDeleteResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthRoleGrantPermissionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthRoleGrantPermissionResponse) */ {
 public:
  AuthRoleGrantPermissionResponse();
  virtual ~AuthRoleGrantPermissionResponse();

  AuthRoleGrantPermissionResponse(const AuthRoleGrantPermissionResponse& from);

  inline AuthRoleGrantPermissionResponse& operator=(const AuthRoleGrantPermissionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRoleGrantPermissionResponse& default_instance();

  void Swap(AuthRoleGrantPermissionResponse* other);

  // implements Message ----------------------------------------------

  inline AuthRoleGrantPermissionResponse* New() const { return New(NULL); }

  AuthRoleGrantPermissionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRoleGrantPermissionResponse& from);
  void MergeFrom(const AuthRoleGrantPermissionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRoleGrantPermissionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthRoleGrantPermissionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthRoleGrantPermissionResponse* default_instance_;
};
// -------------------------------------------------------------------

class AuthRoleRevokePermissionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:etcdserverpb.AuthRoleRevokePermissionResponse) */ {
 public:
  AuthRoleRevokePermissionResponse();
  virtual ~AuthRoleRevokePermissionResponse();

  AuthRoleRevokePermissionResponse(const AuthRoleRevokePermissionResponse& from);

  inline AuthRoleRevokePermissionResponse& operator=(const AuthRoleRevokePermissionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRoleRevokePermissionResponse& default_instance();

  void Swap(AuthRoleRevokePermissionResponse* other);

  // implements Message ----------------------------------------------

  inline AuthRoleRevokePermissionResponse* New() const { return New(NULL); }

  AuthRoleRevokePermissionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRoleRevokePermissionResponse& from);
  void MergeFrom(const AuthRoleRevokePermissionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthRoleRevokePermissionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .etcdserverpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::etcdserverpb::ResponseHeader& header() const;
  ::etcdserverpb::ResponseHeader* mutable_header();
  ::etcdserverpb::ResponseHeader* release_header();
  void set_allocated_header(::etcdserverpb::ResponseHeader* header);

  // @@protoc_insertion_point(class_scope:etcdserverpb.AuthRoleRevokePermissionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::etcdserverpb::ResponseHeader* header_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AuthRoleRevokePermissionResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseHeader

// optional uint64 cluster_id = 1;
inline void ResponseHeader::clear_cluster_id() {
  cluster_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResponseHeader::cluster_id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseHeader.cluster_id)
  return cluster_id_;
}
inline void ResponseHeader::set_cluster_id(::google::protobuf::uint64 value) {
  
  cluster_id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.ResponseHeader.cluster_id)
}

// optional uint64 member_id = 2;
inline void ResponseHeader::clear_member_id() {
  member_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResponseHeader::member_id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseHeader.member_id)
  return member_id_;
}
inline void ResponseHeader::set_member_id(::google::protobuf::uint64 value) {
  
  member_id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.ResponseHeader.member_id)
}

// optional int64 revision = 3;
inline void ResponseHeader::clear_revision() {
  revision_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResponseHeader::revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseHeader.revision)
  return revision_;
}
inline void ResponseHeader::set_revision(::google::protobuf::int64 value) {
  
  revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.ResponseHeader.revision)
}

// optional uint64 raft_term = 4;
inline void ResponseHeader::clear_raft_term() {
  raft_term_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResponseHeader::raft_term() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseHeader.raft_term)
  return raft_term_;
}
inline void ResponseHeader::set_raft_term(::google::protobuf::uint64 value) {
  
  raft_term_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.ResponseHeader.raft_term)
}

// -------------------------------------------------------------------

// RangeRequest

// optional bytes key = 1;
inline void RangeRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RangeRequest::key() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RangeRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.key)
}
inline void RangeRequest::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.RangeRequest.key)
}
inline void RangeRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.RangeRequest.key)
}
inline ::std::string* RangeRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RangeRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RangeRequest::release_key() {
  // @@protoc_insertion_point(field_release:etcdserverpb.RangeRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RangeRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RangeRequest.key)
}

// optional bytes range_end = 2;
inline void RangeRequest::clear_range_end() {
  range_end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RangeRequest::range_end() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.range_end)
  return range_end_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RangeRequest::set_range_end(const ::std::string& value) {
  
  range_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.range_end)
}
inline void RangeRequest::set_range_end(const char* value) {
  
  range_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.RangeRequest.range_end)
}
inline void RangeRequest::set_range_end(const void* value, size_t size) {
  
  range_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.RangeRequest.range_end)
}
inline ::std::string* RangeRequest::mutable_range_end() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RangeRequest.range_end)
  return range_end_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RangeRequest::release_range_end() {
  // @@protoc_insertion_point(field_release:etcdserverpb.RangeRequest.range_end)
  
  return range_end_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RangeRequest::set_allocated_range_end(::std::string* range_end) {
  if (range_end != NULL) {
    
  } else {
    
  }
  range_end_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), range_end);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RangeRequest.range_end)
}

// optional int64 limit = 3;
inline void RangeRequest::clear_limit() {
  limit_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RangeRequest::limit() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.limit)
  return limit_;
}
inline void RangeRequest::set_limit(::google::protobuf::int64 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.limit)
}

// optional int64 revision = 4;
inline void RangeRequest::clear_revision() {
  revision_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RangeRequest::revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.revision)
  return revision_;
}
inline void RangeRequest::set_revision(::google::protobuf::int64 value) {
  
  revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.revision)
}

// optional .etcdserverpb.RangeRequest.SortOrder sort_order = 5;
inline void RangeRequest::clear_sort_order() {
  sort_order_ = 0;
}
inline ::etcdserverpb::RangeRequest_SortOrder RangeRequest::sort_order() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.sort_order)
  return static_cast< ::etcdserverpb::RangeRequest_SortOrder >(sort_order_);
}
inline void RangeRequest::set_sort_order(::etcdserverpb::RangeRequest_SortOrder value) {
  
  sort_order_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.sort_order)
}

// optional .etcdserverpb.RangeRequest.SortTarget sort_target = 6;
inline void RangeRequest::clear_sort_target() {
  sort_target_ = 0;
}
inline ::etcdserverpb::RangeRequest_SortTarget RangeRequest::sort_target() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.sort_target)
  return static_cast< ::etcdserverpb::RangeRequest_SortTarget >(sort_target_);
}
inline void RangeRequest::set_sort_target(::etcdserverpb::RangeRequest_SortTarget value) {
  
  sort_target_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.sort_target)
}

// optional bool serializable = 7;
inline void RangeRequest::clear_serializable() {
  serializable_ = false;
}
inline bool RangeRequest::serializable() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.serializable)
  return serializable_;
}
inline void RangeRequest::set_serializable(bool value) {
  
  serializable_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.serializable)
}

// optional bool keys_only = 8;
inline void RangeRequest::clear_keys_only() {
  keys_only_ = false;
}
inline bool RangeRequest::keys_only() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.keys_only)
  return keys_only_;
}
inline void RangeRequest::set_keys_only(bool value) {
  
  keys_only_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.keys_only)
}

// optional bool count_only = 9;
inline void RangeRequest::clear_count_only() {
  count_only_ = false;
}
inline bool RangeRequest::count_only() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.count_only)
  return count_only_;
}
inline void RangeRequest::set_count_only(bool value) {
  
  count_only_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.count_only)
}

// optional int64 min_mod_revision = 10;
inline void RangeRequest::clear_min_mod_revision() {
  min_mod_revision_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RangeRequest::min_mod_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.min_mod_revision)
  return min_mod_revision_;
}
inline void RangeRequest::set_min_mod_revision(::google::protobuf::int64 value) {
  
  min_mod_revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.min_mod_revision)
}

// optional int64 max_mod_revision = 11;
inline void RangeRequest::clear_max_mod_revision() {
  max_mod_revision_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RangeRequest::max_mod_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.max_mod_revision)
  return max_mod_revision_;
}
inline void RangeRequest::set_max_mod_revision(::google::protobuf::int64 value) {
  
  max_mod_revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.max_mod_revision)
}

// optional int64 min_create_revision = 12;
inline void RangeRequest::clear_min_create_revision() {
  min_create_revision_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RangeRequest::min_create_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.min_create_revision)
  return min_create_revision_;
}
inline void RangeRequest::set_min_create_revision(::google::protobuf::int64 value) {
  
  min_create_revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.min_create_revision)
}

// optional int64 max_create_revision = 13;
inline void RangeRequest::clear_max_create_revision() {
  max_create_revision_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RangeRequest::max_create_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeRequest.max_create_revision)
  return max_create_revision_;
}
inline void RangeRequest::set_max_create_revision(::google::protobuf::int64 value) {
  
  max_create_revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeRequest.max_create_revision)
}

// -------------------------------------------------------------------

// RangeResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool RangeResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void RangeResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& RangeResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* RangeResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RangeResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* RangeResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.RangeResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void RangeResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RangeResponse.header)
}

// repeated .mvccpb.KeyValue kvs = 2;
inline int RangeResponse::kvs_size() const {
  return kvs_.size();
}
inline void RangeResponse::clear_kvs() {
  kvs_.Clear();
}
inline const ::mvccpb::KeyValue& RangeResponse::kvs(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeResponse.kvs)
  return kvs_.Get(index);
}
inline ::mvccpb::KeyValue* RangeResponse::mutable_kvs(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RangeResponse.kvs)
  return kvs_.Mutable(index);
}
inline ::mvccpb::KeyValue* RangeResponse::add_kvs() {
  // @@protoc_insertion_point(field_add:etcdserverpb.RangeResponse.kvs)
  return kvs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mvccpb::KeyValue >*
RangeResponse::mutable_kvs() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.RangeResponse.kvs)
  return &kvs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mvccpb::KeyValue >&
RangeResponse::kvs() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.RangeResponse.kvs)
  return kvs_;
}

// optional bool more = 3;
inline void RangeResponse::clear_more() {
  more_ = false;
}
inline bool RangeResponse::more() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeResponse.more)
  return more_;
}
inline void RangeResponse::set_more(bool value) {
  
  more_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeResponse.more)
}

// optional int64 count = 4;
inline void RangeResponse::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RangeResponse::count() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RangeResponse.count)
  return count_;
}
inline void RangeResponse::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.RangeResponse.count)
}

// -------------------------------------------------------------------

// PutRequest

// optional bytes key = 1;
inline void PutRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutRequest::key() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.PutRequest.key)
}
inline void PutRequest::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.PutRequest.key)
}
inline void PutRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.PutRequest.key)
}
inline ::std::string* PutRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.PutRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_key() {
  // @@protoc_insertion_point(field_release:etcdserverpb.PutRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.PutRequest.key)
}

// optional bytes value = 2;
inline void PutRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutRequest::value() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutRequest.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.PutRequest.value)
}
inline void PutRequest::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.PutRequest.value)
}
inline void PutRequest::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.PutRequest.value)
}
inline ::std::string* PutRequest::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.PutRequest.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_value() {
  // @@protoc_insertion_point(field_release:etcdserverpb.PutRequest.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.PutRequest.value)
}

// optional int64 lease = 3;
inline void PutRequest::clear_lease() {
  lease_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PutRequest::lease() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutRequest.lease)
  return lease_;
}
inline void PutRequest::set_lease(::google::protobuf::int64 value) {
  
  lease_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.PutRequest.lease)
}

// optional bool prev_kv = 4;
inline void PutRequest::clear_prev_kv() {
  prev_kv_ = false;
}
inline bool PutRequest::prev_kv() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutRequest.prev_kv)
  return prev_kv_;
}
inline void PutRequest::set_prev_kv(bool value) {
  
  prev_kv_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.PutRequest.prev_kv)
}

// -------------------------------------------------------------------

// PutResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool PutResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void PutResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& PutResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* PutResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.PutResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* PutResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.PutResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void PutResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.PutResponse.header)
}

// optional .mvccpb.KeyValue prev_kv = 2;
inline bool PutResponse::has_prev_kv() const {
  return !_is_default_instance_ && prev_kv_ != NULL;
}
inline void PutResponse::clear_prev_kv() {
  if (GetArenaNoVirtual() == NULL && prev_kv_ != NULL) delete prev_kv_;
  prev_kv_ = NULL;
}
inline const ::mvccpb::KeyValue& PutResponse::prev_kv() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.PutResponse.prev_kv)
  return prev_kv_ != NULL ? *prev_kv_ : *default_instance_->prev_kv_;
}
inline ::mvccpb::KeyValue* PutResponse::mutable_prev_kv() {
  
  if (prev_kv_ == NULL) {
    prev_kv_ = new ::mvccpb::KeyValue;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.PutResponse.prev_kv)
  return prev_kv_;
}
inline ::mvccpb::KeyValue* PutResponse::release_prev_kv() {
  // @@protoc_insertion_point(field_release:etcdserverpb.PutResponse.prev_kv)
  
  ::mvccpb::KeyValue* temp = prev_kv_;
  prev_kv_ = NULL;
  return temp;
}
inline void PutResponse::set_allocated_prev_kv(::mvccpb::KeyValue* prev_kv) {
  delete prev_kv_;
  prev_kv_ = prev_kv;
  if (prev_kv) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.PutResponse.prev_kv)
}

// -------------------------------------------------------------------

// DeleteRangeRequest

// optional bytes key = 1;
inline void DeleteRangeRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRangeRequest::key() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.DeleteRangeRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRangeRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.DeleteRangeRequest.key)
}
inline void DeleteRangeRequest::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.DeleteRangeRequest.key)
}
inline void DeleteRangeRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.DeleteRangeRequest.key)
}
inline ::std::string* DeleteRangeRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.DeleteRangeRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRangeRequest::release_key() {
  // @@protoc_insertion_point(field_release:etcdserverpb.DeleteRangeRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRangeRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.DeleteRangeRequest.key)
}

// optional bytes range_end = 2;
inline void DeleteRangeRequest::clear_range_end() {
  range_end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRangeRequest::range_end() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.DeleteRangeRequest.range_end)
  return range_end_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRangeRequest::set_range_end(const ::std::string& value) {
  
  range_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.DeleteRangeRequest.range_end)
}
inline void DeleteRangeRequest::set_range_end(const char* value) {
  
  range_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.DeleteRangeRequest.range_end)
}
inline void DeleteRangeRequest::set_range_end(const void* value, size_t size) {
  
  range_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.DeleteRangeRequest.range_end)
}
inline ::std::string* DeleteRangeRequest::mutable_range_end() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.DeleteRangeRequest.range_end)
  return range_end_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRangeRequest::release_range_end() {
  // @@protoc_insertion_point(field_release:etcdserverpb.DeleteRangeRequest.range_end)
  
  return range_end_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRangeRequest::set_allocated_range_end(::std::string* range_end) {
  if (range_end != NULL) {
    
  } else {
    
  }
  range_end_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), range_end);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.DeleteRangeRequest.range_end)
}

// optional bool prev_kv = 3;
inline void DeleteRangeRequest::clear_prev_kv() {
  prev_kv_ = false;
}
inline bool DeleteRangeRequest::prev_kv() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.DeleteRangeRequest.prev_kv)
  return prev_kv_;
}
inline void DeleteRangeRequest::set_prev_kv(bool value) {
  
  prev_kv_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.DeleteRangeRequest.prev_kv)
}

// -------------------------------------------------------------------

// DeleteRangeResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool DeleteRangeResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void DeleteRangeResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& DeleteRangeResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.DeleteRangeResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* DeleteRangeResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.DeleteRangeResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* DeleteRangeResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.DeleteRangeResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DeleteRangeResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.DeleteRangeResponse.header)
}

// optional int64 deleted = 2;
inline void DeleteRangeResponse::clear_deleted() {
  deleted_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeleteRangeResponse::deleted() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.DeleteRangeResponse.deleted)
  return deleted_;
}
inline void DeleteRangeResponse::set_deleted(::google::protobuf::int64 value) {
  
  deleted_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.DeleteRangeResponse.deleted)
}

// repeated .mvccpb.KeyValue prev_kvs = 3;
inline int DeleteRangeResponse::prev_kvs_size() const {
  return prev_kvs_.size();
}
inline void DeleteRangeResponse::clear_prev_kvs() {
  prev_kvs_.Clear();
}
inline const ::mvccpb::KeyValue& DeleteRangeResponse::prev_kvs(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.DeleteRangeResponse.prev_kvs)
  return prev_kvs_.Get(index);
}
inline ::mvccpb::KeyValue* DeleteRangeResponse::mutable_prev_kvs(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.DeleteRangeResponse.prev_kvs)
  return prev_kvs_.Mutable(index);
}
inline ::mvccpb::KeyValue* DeleteRangeResponse::add_prev_kvs() {
  // @@protoc_insertion_point(field_add:etcdserverpb.DeleteRangeResponse.prev_kvs)
  return prev_kvs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mvccpb::KeyValue >*
DeleteRangeResponse::mutable_prev_kvs() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.DeleteRangeResponse.prev_kvs)
  return &prev_kvs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mvccpb::KeyValue >&
DeleteRangeResponse::prev_kvs() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.DeleteRangeResponse.prev_kvs)
  return prev_kvs_;
}

// -------------------------------------------------------------------

// RequestOp

// optional .etcdserverpb.RangeRequest request_range = 1;
inline bool RequestOp::has_request_range() const {
  return request_case() == kRequestRange;
}
inline void RequestOp::set_has_request_range() {
  _oneof_case_[0] = kRequestRange;
}
inline void RequestOp::clear_request_range() {
  if (has_request_range()) {
    delete request_.request_range_;
    clear_has_request();
  }
}
inline  const ::etcdserverpb::RangeRequest& RequestOp::request_range() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RequestOp.request_range)
  return has_request_range()
      ? *request_.request_range_
      : ::etcdserverpb::RangeRequest::default_instance();
}
inline ::etcdserverpb::RangeRequest* RequestOp::mutable_request_range() {
  if (!has_request_range()) {
    clear_request();
    set_has_request_range();
    request_.request_range_ = new ::etcdserverpb::RangeRequest;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RequestOp.request_range)
  return request_.request_range_;
}
inline ::etcdserverpb::RangeRequest* RequestOp::release_request_range() {
  // @@protoc_insertion_point(field_release:etcdserverpb.RequestOp.request_range)
  if (has_request_range()) {
    clear_has_request();
    ::etcdserverpb::RangeRequest* temp = request_.request_range_;
    request_.request_range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RequestOp::set_allocated_request_range(::etcdserverpb::RangeRequest* request_range) {
  clear_request();
  if (request_range) {
    set_has_request_range();
    request_.request_range_ = request_range;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RequestOp.request_range)
}

// optional .etcdserverpb.PutRequest request_put = 2;
inline bool RequestOp::has_request_put() const {
  return request_case() == kRequestPut;
}
inline void RequestOp::set_has_request_put() {
  _oneof_case_[0] = kRequestPut;
}
inline void RequestOp::clear_request_put() {
  if (has_request_put()) {
    delete request_.request_put_;
    clear_has_request();
  }
}
inline  const ::etcdserverpb::PutRequest& RequestOp::request_put() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RequestOp.request_put)
  return has_request_put()
      ? *request_.request_put_
      : ::etcdserverpb::PutRequest::default_instance();
}
inline ::etcdserverpb::PutRequest* RequestOp::mutable_request_put() {
  if (!has_request_put()) {
    clear_request();
    set_has_request_put();
    request_.request_put_ = new ::etcdserverpb::PutRequest;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RequestOp.request_put)
  return request_.request_put_;
}
inline ::etcdserverpb::PutRequest* RequestOp::release_request_put() {
  // @@protoc_insertion_point(field_release:etcdserverpb.RequestOp.request_put)
  if (has_request_put()) {
    clear_has_request();
    ::etcdserverpb::PutRequest* temp = request_.request_put_;
    request_.request_put_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RequestOp::set_allocated_request_put(::etcdserverpb::PutRequest* request_put) {
  clear_request();
  if (request_put) {
    set_has_request_put();
    request_.request_put_ = request_put;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RequestOp.request_put)
}

// optional .etcdserverpb.DeleteRangeRequest request_delete_range = 3;
inline bool RequestOp::has_request_delete_range() const {
  return request_case() == kRequestDeleteRange;
}
inline void RequestOp::set_has_request_delete_range() {
  _oneof_case_[0] = kRequestDeleteRange;
}
inline void RequestOp::clear_request_delete_range() {
  if (has_request_delete_range()) {
    delete request_.request_delete_range_;
    clear_has_request();
  }
}
inline  const ::etcdserverpb::DeleteRangeRequest& RequestOp::request_delete_range() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.RequestOp.request_delete_range)
  return has_request_delete_range()
      ? *request_.request_delete_range_
      : ::etcdserverpb::DeleteRangeRequest::default_instance();
}
inline ::etcdserverpb::DeleteRangeRequest* RequestOp::mutable_request_delete_range() {
  if (!has_request_delete_range()) {
    clear_request();
    set_has_request_delete_range();
    request_.request_delete_range_ = new ::etcdserverpb::DeleteRangeRequest;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.RequestOp.request_delete_range)
  return request_.request_delete_range_;
}
inline ::etcdserverpb::DeleteRangeRequest* RequestOp::release_request_delete_range() {
  // @@protoc_insertion_point(field_release:etcdserverpb.RequestOp.request_delete_range)
  if (has_request_delete_range()) {
    clear_has_request();
    ::etcdserverpb::DeleteRangeRequest* temp = request_.request_delete_range_;
    request_.request_delete_range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void RequestOp::set_allocated_request_delete_range(::etcdserverpb::DeleteRangeRequest* request_delete_range) {
  clear_request();
  if (request_delete_range) {
    set_has_request_delete_range();
    request_.request_delete_range_ = request_delete_range;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RequestOp.request_delete_range)
}

inline bool RequestOp::has_request() const {
  return request_case() != REQUEST_NOT_SET;
}
inline void RequestOp::clear_has_request() {
  _oneof_case_[0] = REQUEST_NOT_SET;
}
inline RequestOp::RequestCase RequestOp::request_case() const {
  return RequestOp::RequestCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ResponseOp

// optional .etcdserverpb.RangeResponse response_range = 1;
inline bool ResponseOp::has_response_range() const {
  return response_case() == kResponseRange;
}
inline void ResponseOp::set_has_response_range() {
  _oneof_case_[0] = kResponseRange;
}
inline void ResponseOp::clear_response_range() {
  if (has_response_range()) {
    delete response_.response_range_;
    clear_has_response();
  }
}
inline  const ::etcdserverpb::RangeResponse& ResponseOp::response_range() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseOp.response_range)
  return has_response_range()
      ? *response_.response_range_
      : ::etcdserverpb::RangeResponse::default_instance();
}
inline ::etcdserverpb::RangeResponse* ResponseOp::mutable_response_range() {
  if (!has_response_range()) {
    clear_response();
    set_has_response_range();
    response_.response_range_ = new ::etcdserverpb::RangeResponse;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.ResponseOp.response_range)
  return response_.response_range_;
}
inline ::etcdserverpb::RangeResponse* ResponseOp::release_response_range() {
  // @@protoc_insertion_point(field_release:etcdserverpb.ResponseOp.response_range)
  if (has_response_range()) {
    clear_has_response();
    ::etcdserverpb::RangeResponse* temp = response_.response_range_;
    response_.response_range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ResponseOp::set_allocated_response_range(::etcdserverpb::RangeResponse* response_range) {
  clear_response();
  if (response_range) {
    set_has_response_range();
    response_.response_range_ = response_range;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.ResponseOp.response_range)
}

// optional .etcdserverpb.PutResponse response_put = 2;
inline bool ResponseOp::has_response_put() const {
  return response_case() == kResponsePut;
}
inline void ResponseOp::set_has_response_put() {
  _oneof_case_[0] = kResponsePut;
}
inline void ResponseOp::clear_response_put() {
  if (has_response_put()) {
    delete response_.response_put_;
    clear_has_response();
  }
}
inline  const ::etcdserverpb::PutResponse& ResponseOp::response_put() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseOp.response_put)
  return has_response_put()
      ? *response_.response_put_
      : ::etcdserverpb::PutResponse::default_instance();
}
inline ::etcdserverpb::PutResponse* ResponseOp::mutable_response_put() {
  if (!has_response_put()) {
    clear_response();
    set_has_response_put();
    response_.response_put_ = new ::etcdserverpb::PutResponse;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.ResponseOp.response_put)
  return response_.response_put_;
}
inline ::etcdserverpb::PutResponse* ResponseOp::release_response_put() {
  // @@protoc_insertion_point(field_release:etcdserverpb.ResponseOp.response_put)
  if (has_response_put()) {
    clear_has_response();
    ::etcdserverpb::PutResponse* temp = response_.response_put_;
    response_.response_put_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ResponseOp::set_allocated_response_put(::etcdserverpb::PutResponse* response_put) {
  clear_response();
  if (response_put) {
    set_has_response_put();
    response_.response_put_ = response_put;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.ResponseOp.response_put)
}

// optional .etcdserverpb.DeleteRangeResponse response_delete_range = 3;
inline bool ResponseOp::has_response_delete_range() const {
  return response_case() == kResponseDeleteRange;
}
inline void ResponseOp::set_has_response_delete_range() {
  _oneof_case_[0] = kResponseDeleteRange;
}
inline void ResponseOp::clear_response_delete_range() {
  if (has_response_delete_range()) {
    delete response_.response_delete_range_;
    clear_has_response();
  }
}
inline  const ::etcdserverpb::DeleteRangeResponse& ResponseOp::response_delete_range() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.ResponseOp.response_delete_range)
  return has_response_delete_range()
      ? *response_.response_delete_range_
      : ::etcdserverpb::DeleteRangeResponse::default_instance();
}
inline ::etcdserverpb::DeleteRangeResponse* ResponseOp::mutable_response_delete_range() {
  if (!has_response_delete_range()) {
    clear_response();
    set_has_response_delete_range();
    response_.response_delete_range_ = new ::etcdserverpb::DeleteRangeResponse;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.ResponseOp.response_delete_range)
  return response_.response_delete_range_;
}
inline ::etcdserverpb::DeleteRangeResponse* ResponseOp::release_response_delete_range() {
  // @@protoc_insertion_point(field_release:etcdserverpb.ResponseOp.response_delete_range)
  if (has_response_delete_range()) {
    clear_has_response();
    ::etcdserverpb::DeleteRangeResponse* temp = response_.response_delete_range_;
    response_.response_delete_range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ResponseOp::set_allocated_response_delete_range(::etcdserverpb::DeleteRangeResponse* response_delete_range) {
  clear_response();
  if (response_delete_range) {
    set_has_response_delete_range();
    response_.response_delete_range_ = response_delete_range;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.ResponseOp.response_delete_range)
}

inline bool ResponseOp::has_response() const {
  return response_case() != RESPONSE_NOT_SET;
}
inline void ResponseOp::clear_has_response() {
  _oneof_case_[0] = RESPONSE_NOT_SET;
}
inline ResponseOp::ResponseCase ResponseOp::response_case() const {
  return ResponseOp::ResponseCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Compare

// optional .etcdserverpb.Compare.CompareResult result = 1;
inline void Compare::clear_result() {
  result_ = 0;
}
inline ::etcdserverpb::Compare_CompareResult Compare::result() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.result)
  return static_cast< ::etcdserverpb::Compare_CompareResult >(result_);
}
inline void Compare::set_result(::etcdserverpb::Compare_CompareResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.result)
}

// optional .etcdserverpb.Compare.CompareTarget target = 2;
inline void Compare::clear_target() {
  target_ = 0;
}
inline ::etcdserverpb::Compare_CompareTarget Compare::target() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.target)
  return static_cast< ::etcdserverpb::Compare_CompareTarget >(target_);
}
inline void Compare::set_target(::etcdserverpb::Compare_CompareTarget value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.target)
}

// optional bytes key = 3;
inline void Compare::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Compare::key() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Compare::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.key)
}
inline void Compare::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Compare.key)
}
inline void Compare::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Compare.key)
}
inline ::std::string* Compare::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Compare.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Compare::release_key() {
  // @@protoc_insertion_point(field_release:etcdserverpb.Compare.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Compare::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Compare.key)
}

// optional int64 version = 4;
inline bool Compare::has_version() const {
  return target_union_case() == kVersion;
}
inline void Compare::set_has_version() {
  _oneof_case_[0] = kVersion;
}
inline void Compare::clear_version() {
  if (has_version()) {
    target_union_.version_ = GOOGLE_LONGLONG(0);
    clear_has_target_union();
  }
}
inline ::google::protobuf::int64 Compare::version() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.version)
  if (has_version()) {
    return target_union_.version_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Compare::set_version(::google::protobuf::int64 value) {
  if (!has_version()) {
    clear_target_union();
    set_has_version();
  }
  target_union_.version_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.version)
}

// optional int64 create_revision = 5;
inline bool Compare::has_create_revision() const {
  return target_union_case() == kCreateRevision;
}
inline void Compare::set_has_create_revision() {
  _oneof_case_[0] = kCreateRevision;
}
inline void Compare::clear_create_revision() {
  if (has_create_revision()) {
    target_union_.create_revision_ = GOOGLE_LONGLONG(0);
    clear_has_target_union();
  }
}
inline ::google::protobuf::int64 Compare::create_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.create_revision)
  if (has_create_revision()) {
    return target_union_.create_revision_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Compare::set_create_revision(::google::protobuf::int64 value) {
  if (!has_create_revision()) {
    clear_target_union();
    set_has_create_revision();
  }
  target_union_.create_revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.create_revision)
}

// optional int64 mod_revision = 6;
inline bool Compare::has_mod_revision() const {
  return target_union_case() == kModRevision;
}
inline void Compare::set_has_mod_revision() {
  _oneof_case_[0] = kModRevision;
}
inline void Compare::clear_mod_revision() {
  if (has_mod_revision()) {
    target_union_.mod_revision_ = GOOGLE_LONGLONG(0);
    clear_has_target_union();
  }
}
inline ::google::protobuf::int64 Compare::mod_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.mod_revision)
  if (has_mod_revision()) {
    return target_union_.mod_revision_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Compare::set_mod_revision(::google::protobuf::int64 value) {
  if (!has_mod_revision()) {
    clear_target_union();
    set_has_mod_revision();
  }
  target_union_.mod_revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.mod_revision)
}

// optional bytes value = 7;
inline bool Compare::has_value() const {
  return target_union_case() == kValue;
}
inline void Compare::set_has_value() {
  _oneof_case_[0] = kValue;
}
inline void Compare::clear_value() {
  if (has_value()) {
    target_union_.value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_target_union();
  }
}
inline const ::std::string& Compare::value() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Compare.value)
  if (has_value()) {
    return target_union_.value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Compare::set_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.value)
  if (!has_value()) {
    clear_target_union();
    set_has_value();
    target_union_.value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  target_union_.value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.Compare.value)
}
inline void Compare::set_value(const char* value) {
  if (!has_value()) {
    clear_target_union();
    set_has_value();
    target_union_.value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  target_union_.value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Compare.value)
}
inline void Compare::set_value(const void* value, size_t size) {
  if (!has_value()) {
    clear_target_union();
    set_has_value();
    target_union_.value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  target_union_.value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Compare.value)
}
inline ::std::string* Compare::mutable_value() {
  if (!has_value()) {
    clear_target_union();
    set_has_value();
    target_union_.value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Compare.value)
  return target_union_.value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Compare::release_value() {
  // @@protoc_insertion_point(field_release:etcdserverpb.Compare.value)
  if (has_value()) {
    clear_has_target_union();
    return target_union_.value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Compare::set_allocated_value(::std::string* value) {
  if (!has_value()) {
    target_union_.value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_target_union();
  if (value != NULL) {
    set_has_value();
    target_union_.value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        value);
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Compare.value)
}

inline bool Compare::has_target_union() const {
  return target_union_case() != TARGET_UNION_NOT_SET;
}
inline void Compare::clear_has_target_union() {
  _oneof_case_[0] = TARGET_UNION_NOT_SET;
}
inline Compare::TargetUnionCase Compare::target_union_case() const {
  return Compare::TargetUnionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// TxnRequest

// repeated .etcdserverpb.Compare compare = 1;
inline int TxnRequest::compare_size() const {
  return compare_.size();
}
inline void TxnRequest::clear_compare() {
  compare_.Clear();
}
inline const ::etcdserverpb::Compare& TxnRequest::compare(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.TxnRequest.compare)
  return compare_.Get(index);
}
inline ::etcdserverpb::Compare* TxnRequest::mutable_compare(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.TxnRequest.compare)
  return compare_.Mutable(index);
}
inline ::etcdserverpb::Compare* TxnRequest::add_compare() {
  // @@protoc_insertion_point(field_add:etcdserverpb.TxnRequest.compare)
  return compare_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::etcdserverpb::Compare >*
TxnRequest::mutable_compare() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.TxnRequest.compare)
  return &compare_;
}
inline const ::google::protobuf::RepeatedPtrField< ::etcdserverpb::Compare >&
TxnRequest::compare() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.TxnRequest.compare)
  return compare_;
}

// repeated .etcdserverpb.RequestOp success = 2;
inline int TxnRequest::success_size() const {
  return success_.size();
}
inline void TxnRequest::clear_success() {
  success_.Clear();
}
inline const ::etcdserverpb::RequestOp& TxnRequest::success(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.TxnRequest.success)
  return success_.Get(index);
}
inline ::etcdserverpb::RequestOp* TxnRequest::mutable_success(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.TxnRequest.success)
  return success_.Mutable(index);
}
inline ::etcdserverpb::RequestOp* TxnRequest::add_success() {
  // @@protoc_insertion_point(field_add:etcdserverpb.TxnRequest.success)
  return success_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::etcdserverpb::RequestOp >*
TxnRequest::mutable_success() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.TxnRequest.success)
  return &success_;
}
inline const ::google::protobuf::RepeatedPtrField< ::etcdserverpb::RequestOp >&
TxnRequest::success() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.TxnRequest.success)
  return success_;
}

// repeated .etcdserverpb.RequestOp failure = 3;
inline int TxnRequest::failure_size() const {
  return failure_.size();
}
inline void TxnRequest::clear_failure() {
  failure_.Clear();
}
inline const ::etcdserverpb::RequestOp& TxnRequest::failure(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.TxnRequest.failure)
  return failure_.Get(index);
}
inline ::etcdserverpb::RequestOp* TxnRequest::mutable_failure(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.TxnRequest.failure)
  return failure_.Mutable(index);
}
inline ::etcdserverpb::RequestOp* TxnRequest::add_failure() {
  // @@protoc_insertion_point(field_add:etcdserverpb.TxnRequest.failure)
  return failure_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::etcdserverpb::RequestOp >*
TxnRequest::mutable_failure() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.TxnRequest.failure)
  return &failure_;
}
inline const ::google::protobuf::RepeatedPtrField< ::etcdserverpb::RequestOp >&
TxnRequest::failure() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.TxnRequest.failure)
  return failure_;
}

// -------------------------------------------------------------------

// TxnResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool TxnResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void TxnResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& TxnResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.TxnResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* TxnResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.TxnResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* TxnResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.TxnResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void TxnResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.TxnResponse.header)
}

// optional bool succeeded = 2;
inline void TxnResponse::clear_succeeded() {
  succeeded_ = false;
}
inline bool TxnResponse::succeeded() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.TxnResponse.succeeded)
  return succeeded_;
}
inline void TxnResponse::set_succeeded(bool value) {
  
  succeeded_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.TxnResponse.succeeded)
}

// repeated .etcdserverpb.ResponseOp responses = 3;
inline int TxnResponse::responses_size() const {
  return responses_.size();
}
inline void TxnResponse::clear_responses() {
  responses_.Clear();
}
inline const ::etcdserverpb::ResponseOp& TxnResponse::responses(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.TxnResponse.responses)
  return responses_.Get(index);
}
inline ::etcdserverpb::ResponseOp* TxnResponse::mutable_responses(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.TxnResponse.responses)
  return responses_.Mutable(index);
}
inline ::etcdserverpb::ResponseOp* TxnResponse::add_responses() {
  // @@protoc_insertion_point(field_add:etcdserverpb.TxnResponse.responses)
  return responses_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::etcdserverpb::ResponseOp >*
TxnResponse::mutable_responses() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.TxnResponse.responses)
  return &responses_;
}
inline const ::google::protobuf::RepeatedPtrField< ::etcdserverpb::ResponseOp >&
TxnResponse::responses() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.TxnResponse.responses)
  return responses_;
}

// -------------------------------------------------------------------

// CompactionRequest

// optional int64 revision = 1;
inline void CompactionRequest::clear_revision() {
  revision_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CompactionRequest::revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.CompactionRequest.revision)
  return revision_;
}
inline void CompactionRequest::set_revision(::google::protobuf::int64 value) {
  
  revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.CompactionRequest.revision)
}

// optional bool physical = 2;
inline void CompactionRequest::clear_physical() {
  physical_ = false;
}
inline bool CompactionRequest::physical() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.CompactionRequest.physical)
  return physical_;
}
inline void CompactionRequest::set_physical(bool value) {
  
  physical_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.CompactionRequest.physical)
}

// -------------------------------------------------------------------

// CompactionResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool CompactionResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void CompactionResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& CompactionResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.CompactionResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* CompactionResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.CompactionResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* CompactionResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.CompactionResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void CompactionResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.CompactionResponse.header)
}

// -------------------------------------------------------------------

// HashRequest

// -------------------------------------------------------------------

// HashResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool HashResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void HashResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& HashResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.HashResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* HashResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.HashResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* HashResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.HashResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void HashResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.HashResponse.header)
}

// optional uint32 hash = 2;
inline void HashResponse::clear_hash() {
  hash_ = 0u;
}
inline ::google::protobuf::uint32 HashResponse::hash() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.HashResponse.hash)
  return hash_;
}
inline void HashResponse::set_hash(::google::protobuf::uint32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.HashResponse.hash)
}

// -------------------------------------------------------------------

// SnapshotRequest

// -------------------------------------------------------------------

// SnapshotResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool SnapshotResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void SnapshotResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& SnapshotResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.SnapshotResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* SnapshotResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.SnapshotResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* SnapshotResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.SnapshotResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SnapshotResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.SnapshotResponse.header)
}

// optional uint64 remaining_bytes = 2;
inline void SnapshotResponse::clear_remaining_bytes() {
  remaining_bytes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SnapshotResponse::remaining_bytes() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.SnapshotResponse.remaining_bytes)
  return remaining_bytes_;
}
inline void SnapshotResponse::set_remaining_bytes(::google::protobuf::uint64 value) {
  
  remaining_bytes_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.SnapshotResponse.remaining_bytes)
}

// optional bytes blob = 3;
inline void SnapshotResponse::clear_blob() {
  blob_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SnapshotResponse::blob() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.SnapshotResponse.blob)
  return blob_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnapshotResponse::set_blob(const ::std::string& value) {
  
  blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.SnapshotResponse.blob)
}
inline void SnapshotResponse::set_blob(const char* value) {
  
  blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.SnapshotResponse.blob)
}
inline void SnapshotResponse::set_blob(const void* value, size_t size) {
  
  blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.SnapshotResponse.blob)
}
inline ::std::string* SnapshotResponse::mutable_blob() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.SnapshotResponse.blob)
  return blob_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnapshotResponse::release_blob() {
  // @@protoc_insertion_point(field_release:etcdserverpb.SnapshotResponse.blob)
  
  return blob_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnapshotResponse::set_allocated_blob(::std::string* blob) {
  if (blob != NULL) {
    
  } else {
    
  }
  blob_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blob);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.SnapshotResponse.blob)
}

// -------------------------------------------------------------------

// WatchRequest

// optional .etcdserverpb.WatchCreateRequest create_request = 1;
inline bool WatchRequest::has_create_request() const {
  return request_union_case() == kCreateRequest;
}
inline void WatchRequest::set_has_create_request() {
  _oneof_case_[0] = kCreateRequest;
}
inline void WatchRequest::clear_create_request() {
  if (has_create_request()) {
    delete request_union_.create_request_;
    clear_has_request_union();
  }
}
inline  const ::etcdserverpb::WatchCreateRequest& WatchRequest::create_request() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchRequest.create_request)
  return has_create_request()
      ? *request_union_.create_request_
      : ::etcdserverpb::WatchCreateRequest::default_instance();
}
inline ::etcdserverpb::WatchCreateRequest* WatchRequest::mutable_create_request() {
  if (!has_create_request()) {
    clear_request_union();
    set_has_create_request();
    request_union_.create_request_ = new ::etcdserverpb::WatchCreateRequest;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchRequest.create_request)
  return request_union_.create_request_;
}
inline ::etcdserverpb::WatchCreateRequest* WatchRequest::release_create_request() {
  // @@protoc_insertion_point(field_release:etcdserverpb.WatchRequest.create_request)
  if (has_create_request()) {
    clear_has_request_union();
    ::etcdserverpb::WatchCreateRequest* temp = request_union_.create_request_;
    request_union_.create_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void WatchRequest::set_allocated_create_request(::etcdserverpb::WatchCreateRequest* create_request) {
  clear_request_union();
  if (create_request) {
    set_has_create_request();
    request_union_.create_request_ = create_request;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchRequest.create_request)
}

// optional .etcdserverpb.WatchCancelRequest cancel_request = 2;
inline bool WatchRequest::has_cancel_request() const {
  return request_union_case() == kCancelRequest;
}
inline void WatchRequest::set_has_cancel_request() {
  _oneof_case_[0] = kCancelRequest;
}
inline void WatchRequest::clear_cancel_request() {
  if (has_cancel_request()) {
    delete request_union_.cancel_request_;
    clear_has_request_union();
  }
}
inline  const ::etcdserverpb::WatchCancelRequest& WatchRequest::cancel_request() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchRequest.cancel_request)
  return has_cancel_request()
      ? *request_union_.cancel_request_
      : ::etcdserverpb::WatchCancelRequest::default_instance();
}
inline ::etcdserverpb::WatchCancelRequest* WatchRequest::mutable_cancel_request() {
  if (!has_cancel_request()) {
    clear_request_union();
    set_has_cancel_request();
    request_union_.cancel_request_ = new ::etcdserverpb::WatchCancelRequest;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchRequest.cancel_request)
  return request_union_.cancel_request_;
}
inline ::etcdserverpb::WatchCancelRequest* WatchRequest::release_cancel_request() {
  // @@protoc_insertion_point(field_release:etcdserverpb.WatchRequest.cancel_request)
  if (has_cancel_request()) {
    clear_has_request_union();
    ::etcdserverpb::WatchCancelRequest* temp = request_union_.cancel_request_;
    request_union_.cancel_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void WatchRequest::set_allocated_cancel_request(::etcdserverpb::WatchCancelRequest* cancel_request) {
  clear_request_union();
  if (cancel_request) {
    set_has_cancel_request();
    request_union_.cancel_request_ = cancel_request;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchRequest.cancel_request)
}

inline bool WatchRequest::has_request_union() const {
  return request_union_case() != REQUEST_UNION_NOT_SET;
}
inline void WatchRequest::clear_has_request_union() {
  _oneof_case_[0] = REQUEST_UNION_NOT_SET;
}
inline WatchRequest::RequestUnionCase WatchRequest::request_union_case() const {
  return WatchRequest::RequestUnionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// WatchCreateRequest

// optional bytes key = 1;
inline void WatchCreateRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WatchCreateRequest::key() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WatchCreateRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.key)
}
inline void WatchCreateRequest::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.WatchCreateRequest.key)
}
inline void WatchCreateRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.WatchCreateRequest.key)
}
inline ::std::string* WatchCreateRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchCreateRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WatchCreateRequest::release_key() {
  // @@protoc_insertion_point(field_release:etcdserverpb.WatchCreateRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WatchCreateRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchCreateRequest.key)
}

// optional bytes range_end = 2;
inline void WatchCreateRequest::clear_range_end() {
  range_end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WatchCreateRequest::range_end() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.range_end)
  return range_end_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WatchCreateRequest::set_range_end(const ::std::string& value) {
  
  range_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.range_end)
}
inline void WatchCreateRequest::set_range_end(const char* value) {
  
  range_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.WatchCreateRequest.range_end)
}
inline void WatchCreateRequest::set_range_end(const void* value, size_t size) {
  
  range_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.WatchCreateRequest.range_end)
}
inline ::std::string* WatchCreateRequest::mutable_range_end() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchCreateRequest.range_end)
  return range_end_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WatchCreateRequest::release_range_end() {
  // @@protoc_insertion_point(field_release:etcdserverpb.WatchCreateRequest.range_end)
  
  return range_end_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WatchCreateRequest::set_allocated_range_end(::std::string* range_end) {
  if (range_end != NULL) {
    
  } else {
    
  }
  range_end_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), range_end);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchCreateRequest.range_end)
}

// optional int64 start_revision = 3;
inline void WatchCreateRequest::clear_start_revision() {
  start_revision_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WatchCreateRequest::start_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.start_revision)
  return start_revision_;
}
inline void WatchCreateRequest::set_start_revision(::google::protobuf::int64 value) {
  
  start_revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.start_revision)
}

// optional bool progress_notify = 4;
inline void WatchCreateRequest::clear_progress_notify() {
  progress_notify_ = false;
}
inline bool WatchCreateRequest::progress_notify() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.progress_notify)
  return progress_notify_;
}
inline void WatchCreateRequest::set_progress_notify(bool value) {
  
  progress_notify_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.progress_notify)
}

// repeated .etcdserverpb.WatchCreateRequest.FilterType filters = 5;
inline int WatchCreateRequest::filters_size() const {
  return filters_.size();
}
inline void WatchCreateRequest::clear_filters() {
  filters_.Clear();
}
inline ::etcdserverpb::WatchCreateRequest_FilterType WatchCreateRequest::filters(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.filters)
  return static_cast< ::etcdserverpb::WatchCreateRequest_FilterType >(filters_.Get(index));
}
inline void WatchCreateRequest::set_filters(int index, ::etcdserverpb::WatchCreateRequest_FilterType value) {
  filters_.Set(index, value);
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.filters)
}
inline void WatchCreateRequest::add_filters(::etcdserverpb::WatchCreateRequest_FilterType value) {
  filters_.Add(value);
  // @@protoc_insertion_point(field_add:etcdserverpb.WatchCreateRequest.filters)
}
inline const ::google::protobuf::RepeatedField<int>&
WatchCreateRequest::filters() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.WatchCreateRequest.filters)
  return filters_;
}
inline ::google::protobuf::RepeatedField<int>*
WatchCreateRequest::mutable_filters() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.WatchCreateRequest.filters)
  return &filters_;
}

// optional bool prev_kv = 6;
inline void WatchCreateRequest::clear_prev_kv() {
  prev_kv_ = false;
}
inline bool WatchCreateRequest::prev_kv() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCreateRequest.prev_kv)
  return prev_kv_;
}
inline void WatchCreateRequest::set_prev_kv(bool value) {
  
  prev_kv_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCreateRequest.prev_kv)
}

// -------------------------------------------------------------------

// WatchCancelRequest

// optional int64 watch_id = 1;
inline void WatchCancelRequest::clear_watch_id() {
  watch_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WatchCancelRequest::watch_id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchCancelRequest.watch_id)
  return watch_id_;
}
inline void WatchCancelRequest::set_watch_id(::google::protobuf::int64 value) {
  
  watch_id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchCancelRequest.watch_id)
}

// -------------------------------------------------------------------

// WatchResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool WatchResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void WatchResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& WatchResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* WatchResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* WatchResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.WatchResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void WatchResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchResponse.header)
}

// optional int64 watch_id = 2;
inline void WatchResponse::clear_watch_id() {
  watch_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WatchResponse::watch_id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.watch_id)
  return watch_id_;
}
inline void WatchResponse::set_watch_id(::google::protobuf::int64 value) {
  
  watch_id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchResponse.watch_id)
}

// optional bool created = 3;
inline void WatchResponse::clear_created() {
  created_ = false;
}
inline bool WatchResponse::created() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.created)
  return created_;
}
inline void WatchResponse::set_created(bool value) {
  
  created_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchResponse.created)
}

// optional bool canceled = 4;
inline void WatchResponse::clear_canceled() {
  canceled_ = false;
}
inline bool WatchResponse::canceled() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.canceled)
  return canceled_;
}
inline void WatchResponse::set_canceled(bool value) {
  
  canceled_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchResponse.canceled)
}

// optional int64 compact_revision = 5;
inline void WatchResponse::clear_compact_revision() {
  compact_revision_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WatchResponse::compact_revision() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.compact_revision)
  return compact_revision_;
}
inline void WatchResponse::set_compact_revision(::google::protobuf::int64 value) {
  
  compact_revision_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.WatchResponse.compact_revision)
}

// repeated .mvccpb.Event events = 11;
inline int WatchResponse::events_size() const {
  return events_.size();
}
inline void WatchResponse::clear_events() {
  events_.Clear();
}
inline const ::mvccpb::Event& WatchResponse::events(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.WatchResponse.events)
  return events_.Get(index);
}
inline ::mvccpb::Event* WatchResponse::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.WatchResponse.events)
  return events_.Mutable(index);
}
inline ::mvccpb::Event* WatchResponse::add_events() {
  // @@protoc_insertion_point(field_add:etcdserverpb.WatchResponse.events)
  return events_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mvccpb::Event >*
WatchResponse::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.WatchResponse.events)
  return &events_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mvccpb::Event >&
WatchResponse::events() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.WatchResponse.events)
  return events_;
}

// -------------------------------------------------------------------

// LeaseGrantRequest

// optional int64 TTL = 1;
inline void LeaseGrantRequest::clear_ttl() {
  ttl_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaseGrantRequest::ttl() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseGrantRequest.TTL)
  return ttl_;
}
inline void LeaseGrantRequest::set_ttl(::google::protobuf::int64 value) {
  
  ttl_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseGrantRequest.TTL)
}

// optional int64 ID = 2;
inline void LeaseGrantRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaseGrantRequest::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseGrantRequest.ID)
  return id_;
}
inline void LeaseGrantRequest::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseGrantRequest.ID)
}

// -------------------------------------------------------------------

// LeaseGrantResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool LeaseGrantResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void LeaseGrantResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& LeaseGrantResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseGrantResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* LeaseGrantResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseGrantResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* LeaseGrantResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.LeaseGrantResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void LeaseGrantResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.LeaseGrantResponse.header)
}

// optional int64 ID = 2;
inline void LeaseGrantResponse::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaseGrantResponse::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseGrantResponse.ID)
  return id_;
}
inline void LeaseGrantResponse::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseGrantResponse.ID)
}

// optional int64 TTL = 3;
inline void LeaseGrantResponse::clear_ttl() {
  ttl_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaseGrantResponse::ttl() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseGrantResponse.TTL)
  return ttl_;
}
inline void LeaseGrantResponse::set_ttl(::google::protobuf::int64 value) {
  
  ttl_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseGrantResponse.TTL)
}

// optional string error = 4;
inline void LeaseGrantResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LeaseGrantResponse::error() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseGrantResponse.error)
  return error_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaseGrantResponse::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseGrantResponse.error)
}
inline void LeaseGrantResponse::set_error(const char* value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.LeaseGrantResponse.error)
}
inline void LeaseGrantResponse::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.LeaseGrantResponse.error)
}
inline ::std::string* LeaseGrantResponse::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseGrantResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LeaseGrantResponse::release_error() {
  // @@protoc_insertion_point(field_release:etcdserverpb.LeaseGrantResponse.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LeaseGrantResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.LeaseGrantResponse.error)
}

// -------------------------------------------------------------------

// LeaseRevokeRequest

// optional int64 ID = 1;
inline void LeaseRevokeRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaseRevokeRequest::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseRevokeRequest.ID)
  return id_;
}
inline void LeaseRevokeRequest::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseRevokeRequest.ID)
}

// -------------------------------------------------------------------

// LeaseRevokeResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool LeaseRevokeResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void LeaseRevokeResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& LeaseRevokeResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseRevokeResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* LeaseRevokeResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseRevokeResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* LeaseRevokeResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.LeaseRevokeResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void LeaseRevokeResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.LeaseRevokeResponse.header)
}

// -------------------------------------------------------------------

// LeaseKeepAliveRequest

// optional int64 ID = 1;
inline void LeaseKeepAliveRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaseKeepAliveRequest::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseKeepAliveRequest.ID)
  return id_;
}
inline void LeaseKeepAliveRequest::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseKeepAliveRequest.ID)
}

// -------------------------------------------------------------------

// LeaseKeepAliveResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool LeaseKeepAliveResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void LeaseKeepAliveResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& LeaseKeepAliveResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseKeepAliveResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* LeaseKeepAliveResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseKeepAliveResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* LeaseKeepAliveResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.LeaseKeepAliveResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void LeaseKeepAliveResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.LeaseKeepAliveResponse.header)
}

// optional int64 ID = 2;
inline void LeaseKeepAliveResponse::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaseKeepAliveResponse::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseKeepAliveResponse.ID)
  return id_;
}
inline void LeaseKeepAliveResponse::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseKeepAliveResponse.ID)
}

// optional int64 TTL = 3;
inline void LeaseKeepAliveResponse::clear_ttl() {
  ttl_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaseKeepAliveResponse::ttl() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseKeepAliveResponse.TTL)
  return ttl_;
}
inline void LeaseKeepAliveResponse::set_ttl(::google::protobuf::int64 value) {
  
  ttl_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseKeepAliveResponse.TTL)
}

// -------------------------------------------------------------------

// LeaseTimeToLiveRequest

// optional int64 ID = 1;
inline void LeaseTimeToLiveRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaseTimeToLiveRequest::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveRequest.ID)
  return id_;
}
inline void LeaseTimeToLiveRequest::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseTimeToLiveRequest.ID)
}

// optional bool keys = 2;
inline void LeaseTimeToLiveRequest::clear_keys() {
  keys_ = false;
}
inline bool LeaseTimeToLiveRequest::keys() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveRequest.keys)
  return keys_;
}
inline void LeaseTimeToLiveRequest::set_keys(bool value) {
  
  keys_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseTimeToLiveRequest.keys)
}

// -------------------------------------------------------------------

// LeaseTimeToLiveResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool LeaseTimeToLiveResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void LeaseTimeToLiveResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& LeaseTimeToLiveResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* LeaseTimeToLiveResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseTimeToLiveResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* LeaseTimeToLiveResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.LeaseTimeToLiveResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void LeaseTimeToLiveResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.LeaseTimeToLiveResponse.header)
}

// optional int64 ID = 2;
inline void LeaseTimeToLiveResponse::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaseTimeToLiveResponse::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveResponse.ID)
  return id_;
}
inline void LeaseTimeToLiveResponse::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseTimeToLiveResponse.ID)
}

// optional int64 TTL = 3;
inline void LeaseTimeToLiveResponse::clear_ttl() {
  ttl_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaseTimeToLiveResponse::ttl() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveResponse.TTL)
  return ttl_;
}
inline void LeaseTimeToLiveResponse::set_ttl(::google::protobuf::int64 value) {
  
  ttl_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseTimeToLiveResponse.TTL)
}

// optional int64 grantedTTL = 4;
inline void LeaseTimeToLiveResponse::clear_grantedttl() {
  grantedttl_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LeaseTimeToLiveResponse::grantedttl() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveResponse.grantedTTL)
  return grantedttl_;
}
inline void LeaseTimeToLiveResponse::set_grantedttl(::google::protobuf::int64 value) {
  
  grantedttl_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseTimeToLiveResponse.grantedTTL)
}

// repeated bytes keys = 5;
inline int LeaseTimeToLiveResponse::keys_size() const {
  return keys_.size();
}
inline void LeaseTimeToLiveResponse::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& LeaseTimeToLiveResponse::keys(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.LeaseTimeToLiveResponse.keys)
  return keys_.Get(index);
}
inline ::std::string* LeaseTimeToLiveResponse::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.LeaseTimeToLiveResponse.keys)
  return keys_.Mutable(index);
}
inline void LeaseTimeToLiveResponse::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:etcdserverpb.LeaseTimeToLiveResponse.keys)
  keys_.Mutable(index)->assign(value);
}
inline void LeaseTimeToLiveResponse::set_keys(int index, const char* value) {
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:etcdserverpb.LeaseTimeToLiveResponse.keys)
}
inline void LeaseTimeToLiveResponse::set_keys(int index, const void* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.LeaseTimeToLiveResponse.keys)
}
inline ::std::string* LeaseTimeToLiveResponse::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:etcdserverpb.LeaseTimeToLiveResponse.keys)
  return keys_.Add();
}
inline void LeaseTimeToLiveResponse::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:etcdserverpb.LeaseTimeToLiveResponse.keys)
}
inline void LeaseTimeToLiveResponse::add_keys(const char* value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:etcdserverpb.LeaseTimeToLiveResponse.keys)
}
inline void LeaseTimeToLiveResponse::add_keys(const void* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:etcdserverpb.LeaseTimeToLiveResponse.keys)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
LeaseTimeToLiveResponse::keys() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.LeaseTimeToLiveResponse.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
LeaseTimeToLiveResponse::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.LeaseTimeToLiveResponse.keys)
  return &keys_;
}

// -------------------------------------------------------------------

// Member

// optional uint64 ID = 1;
inline void Member::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Member::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Member.ID)
  return id_;
}
inline void Member::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Member.ID)
}

// optional string name = 2;
inline void Member::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Member::name() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Member.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Member::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.Member.name)
}
inline void Member::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Member.name)
}
inline void Member::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Member.name)
}
inline ::std::string* Member::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Member.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Member::release_name() {
  // @@protoc_insertion_point(field_release:etcdserverpb.Member.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Member::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Member.name)
}

// repeated string peerURLs = 3;
inline int Member::peerurls_size() const {
  return peerurls_.size();
}
inline void Member::clear_peerurls() {
  peerurls_.Clear();
}
inline const ::std::string& Member::peerurls(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Member.peerURLs)
  return peerurls_.Get(index);
}
inline ::std::string* Member::mutable_peerurls(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Member.peerURLs)
  return peerurls_.Mutable(index);
}
inline void Member::set_peerurls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:etcdserverpb.Member.peerURLs)
  peerurls_.Mutable(index)->assign(value);
}
inline void Member::set_peerurls(int index, const char* value) {
  peerurls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Member.peerURLs)
}
inline void Member::set_peerurls(int index, const char* value, size_t size) {
  peerurls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Member.peerURLs)
}
inline ::std::string* Member::add_peerurls() {
  // @@protoc_insertion_point(field_add_mutable:etcdserverpb.Member.peerURLs)
  return peerurls_.Add();
}
inline void Member::add_peerurls(const ::std::string& value) {
  peerurls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:etcdserverpb.Member.peerURLs)
}
inline void Member::add_peerurls(const char* value) {
  peerurls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:etcdserverpb.Member.peerURLs)
}
inline void Member::add_peerurls(const char* value, size_t size) {
  peerurls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:etcdserverpb.Member.peerURLs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Member::peerurls() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.Member.peerURLs)
  return peerurls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Member::mutable_peerurls() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.Member.peerURLs)
  return &peerurls_;
}

// repeated string clientURLs = 4;
inline int Member::clienturls_size() const {
  return clienturls_.size();
}
inline void Member::clear_clienturls() {
  clienturls_.Clear();
}
inline const ::std::string& Member::clienturls(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Member.clientURLs)
  return clienturls_.Get(index);
}
inline ::std::string* Member::mutable_clienturls(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Member.clientURLs)
  return clienturls_.Mutable(index);
}
inline void Member::set_clienturls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:etcdserverpb.Member.clientURLs)
  clienturls_.Mutable(index)->assign(value);
}
inline void Member::set_clienturls(int index, const char* value) {
  clienturls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Member.clientURLs)
}
inline void Member::set_clienturls(int index, const char* value, size_t size) {
  clienturls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Member.clientURLs)
}
inline ::std::string* Member::add_clienturls() {
  // @@protoc_insertion_point(field_add_mutable:etcdserverpb.Member.clientURLs)
  return clienturls_.Add();
}
inline void Member::add_clienturls(const ::std::string& value) {
  clienturls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:etcdserverpb.Member.clientURLs)
}
inline void Member::add_clienturls(const char* value) {
  clienturls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:etcdserverpb.Member.clientURLs)
}
inline void Member::add_clienturls(const char* value, size_t size) {
  clienturls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:etcdserverpb.Member.clientURLs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Member::clienturls() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.Member.clientURLs)
  return clienturls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Member::mutable_clienturls() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.Member.clientURLs)
  return &clienturls_;
}

// -------------------------------------------------------------------

// MemberAddRequest

// repeated string peerURLs = 1;
inline int MemberAddRequest::peerurls_size() const {
  return peerurls_.size();
}
inline void MemberAddRequest::clear_peerurls() {
  peerurls_.Clear();
}
inline const ::std::string& MemberAddRequest::peerurls(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.MemberAddRequest.peerURLs)
  return peerurls_.Get(index);
}
inline ::std::string* MemberAddRequest::mutable_peerurls(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.MemberAddRequest.peerURLs)
  return peerurls_.Mutable(index);
}
inline void MemberAddRequest::set_peerurls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:etcdserverpb.MemberAddRequest.peerURLs)
  peerurls_.Mutable(index)->assign(value);
}
inline void MemberAddRequest::set_peerurls(int index, const char* value) {
  peerurls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:etcdserverpb.MemberAddRequest.peerURLs)
}
inline void MemberAddRequest::set_peerurls(int index, const char* value, size_t size) {
  peerurls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.MemberAddRequest.peerURLs)
}
inline ::std::string* MemberAddRequest::add_peerurls() {
  // @@protoc_insertion_point(field_add_mutable:etcdserverpb.MemberAddRequest.peerURLs)
  return peerurls_.Add();
}
inline void MemberAddRequest::add_peerurls(const ::std::string& value) {
  peerurls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:etcdserverpb.MemberAddRequest.peerURLs)
}
inline void MemberAddRequest::add_peerurls(const char* value) {
  peerurls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:etcdserverpb.MemberAddRequest.peerURLs)
}
inline void MemberAddRequest::add_peerurls(const char* value, size_t size) {
  peerurls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:etcdserverpb.MemberAddRequest.peerURLs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MemberAddRequest::peerurls() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.MemberAddRequest.peerURLs)
  return peerurls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MemberAddRequest::mutable_peerurls() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.MemberAddRequest.peerURLs)
  return &peerurls_;
}

// -------------------------------------------------------------------

// MemberAddResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool MemberAddResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void MemberAddResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& MemberAddResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.MemberAddResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* MemberAddResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.MemberAddResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* MemberAddResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.MemberAddResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MemberAddResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.MemberAddResponse.header)
}

// optional .etcdserverpb.Member member = 2;
inline bool MemberAddResponse::has_member() const {
  return !_is_default_instance_ && member_ != NULL;
}
inline void MemberAddResponse::clear_member() {
  if (GetArenaNoVirtual() == NULL && member_ != NULL) delete member_;
  member_ = NULL;
}
inline const ::etcdserverpb::Member& MemberAddResponse::member() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.MemberAddResponse.member)
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::etcdserverpb::Member* MemberAddResponse::mutable_member() {
  
  if (member_ == NULL) {
    member_ = new ::etcdserverpb::Member;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.MemberAddResponse.member)
  return member_;
}
inline ::etcdserverpb::Member* MemberAddResponse::release_member() {
  // @@protoc_insertion_point(field_release:etcdserverpb.MemberAddResponse.member)
  
  ::etcdserverpb::Member* temp = member_;
  member_ = NULL;
  return temp;
}
inline void MemberAddResponse::set_allocated_member(::etcdserverpb::Member* member) {
  delete member_;
  member_ = member;
  if (member) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.MemberAddResponse.member)
}

// -------------------------------------------------------------------

// MemberRemoveRequest

// optional uint64 ID = 1;
inline void MemberRemoveRequest::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MemberRemoveRequest::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.MemberRemoveRequest.ID)
  return id_;
}
inline void MemberRemoveRequest::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.MemberRemoveRequest.ID)
}

// -------------------------------------------------------------------

// MemberRemoveResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool MemberRemoveResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void MemberRemoveResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& MemberRemoveResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.MemberRemoveResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* MemberRemoveResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.MemberRemoveResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* MemberRemoveResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.MemberRemoveResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MemberRemoveResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.MemberRemoveResponse.header)
}

// -------------------------------------------------------------------

// MemberUpdateRequest

// optional uint64 ID = 1;
inline void MemberUpdateRequest::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MemberUpdateRequest::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.MemberUpdateRequest.ID)
  return id_;
}
inline void MemberUpdateRequest::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.MemberUpdateRequest.ID)
}

// repeated string peerURLs = 2;
inline int MemberUpdateRequest::peerurls_size() const {
  return peerurls_.size();
}
inline void MemberUpdateRequest::clear_peerurls() {
  peerurls_.Clear();
}
inline const ::std::string& MemberUpdateRequest::peerurls(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.MemberUpdateRequest.peerURLs)
  return peerurls_.Get(index);
}
inline ::std::string* MemberUpdateRequest::mutable_peerurls(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.MemberUpdateRequest.peerURLs)
  return peerurls_.Mutable(index);
}
inline void MemberUpdateRequest::set_peerurls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:etcdserverpb.MemberUpdateRequest.peerURLs)
  peerurls_.Mutable(index)->assign(value);
}
inline void MemberUpdateRequest::set_peerurls(int index, const char* value) {
  peerurls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:etcdserverpb.MemberUpdateRequest.peerURLs)
}
inline void MemberUpdateRequest::set_peerurls(int index, const char* value, size_t size) {
  peerurls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.MemberUpdateRequest.peerURLs)
}
inline ::std::string* MemberUpdateRequest::add_peerurls() {
  // @@protoc_insertion_point(field_add_mutable:etcdserverpb.MemberUpdateRequest.peerURLs)
  return peerurls_.Add();
}
inline void MemberUpdateRequest::add_peerurls(const ::std::string& value) {
  peerurls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:etcdserverpb.MemberUpdateRequest.peerURLs)
}
inline void MemberUpdateRequest::add_peerurls(const char* value) {
  peerurls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:etcdserverpb.MemberUpdateRequest.peerURLs)
}
inline void MemberUpdateRequest::add_peerurls(const char* value, size_t size) {
  peerurls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:etcdserverpb.MemberUpdateRequest.peerURLs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MemberUpdateRequest::peerurls() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.MemberUpdateRequest.peerURLs)
  return peerurls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MemberUpdateRequest::mutable_peerurls() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.MemberUpdateRequest.peerURLs)
  return &peerurls_;
}

// -------------------------------------------------------------------

// MemberUpdateResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool MemberUpdateResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void MemberUpdateResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& MemberUpdateResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.MemberUpdateResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* MemberUpdateResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.MemberUpdateResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* MemberUpdateResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.MemberUpdateResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MemberUpdateResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.MemberUpdateResponse.header)
}

// -------------------------------------------------------------------

// MemberListRequest

// -------------------------------------------------------------------

// MemberListResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool MemberListResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void MemberListResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& MemberListResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.MemberListResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* MemberListResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.MemberListResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* MemberListResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.MemberListResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MemberListResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.MemberListResponse.header)
}

// repeated .etcdserverpb.Member members = 2;
inline int MemberListResponse::members_size() const {
  return members_.size();
}
inline void MemberListResponse::clear_members() {
  members_.Clear();
}
inline const ::etcdserverpb::Member& MemberListResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.MemberListResponse.members)
  return members_.Get(index);
}
inline ::etcdserverpb::Member* MemberListResponse::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.MemberListResponse.members)
  return members_.Mutable(index);
}
inline ::etcdserverpb::Member* MemberListResponse::add_members() {
  // @@protoc_insertion_point(field_add:etcdserverpb.MemberListResponse.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::etcdserverpb::Member >*
MemberListResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.MemberListResponse.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::etcdserverpb::Member >&
MemberListResponse::members() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.MemberListResponse.members)
  return members_;
}

// -------------------------------------------------------------------

// DefragmentRequest

// -------------------------------------------------------------------

// DefragmentResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool DefragmentResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void DefragmentResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& DefragmentResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.DefragmentResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* DefragmentResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.DefragmentResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* DefragmentResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.DefragmentResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DefragmentResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.DefragmentResponse.header)
}

// -------------------------------------------------------------------

// AlarmRequest

// optional .etcdserverpb.AlarmRequest.AlarmAction action = 1;
inline void AlarmRequest::clear_action() {
  action_ = 0;
}
inline ::etcdserverpb::AlarmRequest_AlarmAction AlarmRequest::action() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AlarmRequest.action)
  return static_cast< ::etcdserverpb::AlarmRequest_AlarmAction >(action_);
}
inline void AlarmRequest::set_action(::etcdserverpb::AlarmRequest_AlarmAction value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.AlarmRequest.action)
}

// optional uint64 memberID = 2;
inline void AlarmRequest::clear_memberid() {
  memberid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AlarmRequest::memberid() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AlarmRequest.memberID)
  return memberid_;
}
inline void AlarmRequest::set_memberid(::google::protobuf::uint64 value) {
  
  memberid_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.AlarmRequest.memberID)
}

// optional .etcdserverpb.AlarmType alarm = 3;
inline void AlarmRequest::clear_alarm() {
  alarm_ = 0;
}
inline ::etcdserverpb::AlarmType AlarmRequest::alarm() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AlarmRequest.alarm)
  return static_cast< ::etcdserverpb::AlarmType >(alarm_);
}
inline void AlarmRequest::set_alarm(::etcdserverpb::AlarmType value) {
  
  alarm_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.AlarmRequest.alarm)
}

// -------------------------------------------------------------------

// AlarmMember

// optional uint64 memberID = 1;
inline void AlarmMember::clear_memberid() {
  memberid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AlarmMember::memberid() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AlarmMember.memberID)
  return memberid_;
}
inline void AlarmMember::set_memberid(::google::protobuf::uint64 value) {
  
  memberid_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.AlarmMember.memberID)
}

// optional .etcdserverpb.AlarmType alarm = 2;
inline void AlarmMember::clear_alarm() {
  alarm_ = 0;
}
inline ::etcdserverpb::AlarmType AlarmMember::alarm() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AlarmMember.alarm)
  return static_cast< ::etcdserverpb::AlarmType >(alarm_);
}
inline void AlarmMember::set_alarm(::etcdserverpb::AlarmType value) {
  
  alarm_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.AlarmMember.alarm)
}

// -------------------------------------------------------------------

// AlarmResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AlarmResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AlarmResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AlarmResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AlarmResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AlarmResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AlarmResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AlarmResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AlarmResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AlarmResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AlarmResponse.header)
}

// repeated .etcdserverpb.AlarmMember alarms = 2;
inline int AlarmResponse::alarms_size() const {
  return alarms_.size();
}
inline void AlarmResponse::clear_alarms() {
  alarms_.Clear();
}
inline const ::etcdserverpb::AlarmMember& AlarmResponse::alarms(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AlarmResponse.alarms)
  return alarms_.Get(index);
}
inline ::etcdserverpb::AlarmMember* AlarmResponse::mutable_alarms(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AlarmResponse.alarms)
  return alarms_.Mutable(index);
}
inline ::etcdserverpb::AlarmMember* AlarmResponse::add_alarms() {
  // @@protoc_insertion_point(field_add:etcdserverpb.AlarmResponse.alarms)
  return alarms_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::etcdserverpb::AlarmMember >*
AlarmResponse::mutable_alarms() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.AlarmResponse.alarms)
  return &alarms_;
}
inline const ::google::protobuf::RepeatedPtrField< ::etcdserverpb::AlarmMember >&
AlarmResponse::alarms() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.AlarmResponse.alarms)
  return alarms_;
}

// -------------------------------------------------------------------

// StatusRequest

// -------------------------------------------------------------------

// StatusResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool StatusResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void StatusResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& StatusResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.StatusResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* StatusResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.StatusResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* StatusResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.StatusResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void StatusResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.StatusResponse.header)
}

// optional string version = 2;
inline void StatusResponse::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StatusResponse::version() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.StatusResponse.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusResponse::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.StatusResponse.version)
}
inline void StatusResponse::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.StatusResponse.version)
}
inline void StatusResponse::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.StatusResponse.version)
}
inline ::std::string* StatusResponse::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.StatusResponse.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusResponse::release_version() {
  // @@protoc_insertion_point(field_release:etcdserverpb.StatusResponse.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusResponse::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.StatusResponse.version)
}

// optional int64 dbSize = 3;
inline void StatusResponse::clear_dbsize() {
  dbsize_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 StatusResponse::dbsize() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.StatusResponse.dbSize)
  return dbsize_;
}
inline void StatusResponse::set_dbsize(::google::protobuf::int64 value) {
  
  dbsize_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.StatusResponse.dbSize)
}

// optional uint64 leader = 4;
inline void StatusResponse::clear_leader() {
  leader_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusResponse::leader() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.StatusResponse.leader)
  return leader_;
}
inline void StatusResponse::set_leader(::google::protobuf::uint64 value) {
  
  leader_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.StatusResponse.leader)
}

// optional uint64 raftIndex = 5;
inline void StatusResponse::clear_raftindex() {
  raftindex_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusResponse::raftindex() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.StatusResponse.raftIndex)
  return raftindex_;
}
inline void StatusResponse::set_raftindex(::google::protobuf::uint64 value) {
  
  raftindex_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.StatusResponse.raftIndex)
}

// optional uint64 raftTerm = 6;
inline void StatusResponse::clear_raftterm() {
  raftterm_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StatusResponse::raftterm() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.StatusResponse.raftTerm)
  return raftterm_;
}
inline void StatusResponse::set_raftterm(::google::protobuf::uint64 value) {
  
  raftterm_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.StatusResponse.raftTerm)
}

// -------------------------------------------------------------------

// AuthEnableRequest

// -------------------------------------------------------------------

// AuthDisableRequest

// -------------------------------------------------------------------

// AuthenticateRequest

// optional string name = 1;
inline void AuthenticateRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthenticateRequest::name() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthenticateRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthenticateRequest.name)
}
inline void AuthenticateRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthenticateRequest.name)
}
inline void AuthenticateRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthenticateRequest.name)
}
inline ::std::string* AuthenticateRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthenticateRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateRequest::release_name() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthenticateRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthenticateRequest.name)
}

// optional string password = 2;
inline void AuthenticateRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthenticateRequest::password() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthenticateRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthenticateRequest.password)
}
inline void AuthenticateRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthenticateRequest.password)
}
inline void AuthenticateRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthenticateRequest.password)
}
inline ::std::string* AuthenticateRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthenticateRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateRequest::release_password() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthenticateRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthenticateRequest.password)
}

// -------------------------------------------------------------------

// AuthUserAddRequest

// optional string name = 1;
inline void AuthUserAddRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthUserAddRequest::name() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserAddRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserAddRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthUserAddRequest.name)
}
inline void AuthUserAddRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthUserAddRequest.name)
}
inline void AuthUserAddRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthUserAddRequest.name)
}
inline ::std::string* AuthUserAddRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserAddRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthUserAddRequest::release_name() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserAddRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserAddRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserAddRequest.name)
}

// optional string password = 2;
inline void AuthUserAddRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthUserAddRequest::password() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserAddRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserAddRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthUserAddRequest.password)
}
inline void AuthUserAddRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthUserAddRequest.password)
}
inline void AuthUserAddRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthUserAddRequest.password)
}
inline ::std::string* AuthUserAddRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserAddRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthUserAddRequest::release_password() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserAddRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserAddRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserAddRequest.password)
}

// -------------------------------------------------------------------

// AuthUserGetRequest

// optional string name = 1;
inline void AuthUserGetRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthUserGetRequest::name() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserGetRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserGetRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthUserGetRequest.name)
}
inline void AuthUserGetRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthUserGetRequest.name)
}
inline void AuthUserGetRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthUserGetRequest.name)
}
inline ::std::string* AuthUserGetRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserGetRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthUserGetRequest::release_name() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserGetRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserGetRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserGetRequest.name)
}

// -------------------------------------------------------------------

// AuthUserDeleteRequest

// optional string name = 1;
inline void AuthUserDeleteRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthUserDeleteRequest::name() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserDeleteRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserDeleteRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthUserDeleteRequest.name)
}
inline void AuthUserDeleteRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthUserDeleteRequest.name)
}
inline void AuthUserDeleteRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthUserDeleteRequest.name)
}
inline ::std::string* AuthUserDeleteRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserDeleteRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthUserDeleteRequest::release_name() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserDeleteRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserDeleteRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserDeleteRequest.name)
}

// -------------------------------------------------------------------

// AuthUserChangePasswordRequest

// optional string name = 1;
inline void AuthUserChangePasswordRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthUserChangePasswordRequest::name() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserChangePasswordRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserChangePasswordRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthUserChangePasswordRequest.name)
}
inline void AuthUserChangePasswordRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthUserChangePasswordRequest.name)
}
inline void AuthUserChangePasswordRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthUserChangePasswordRequest.name)
}
inline ::std::string* AuthUserChangePasswordRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserChangePasswordRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthUserChangePasswordRequest::release_name() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserChangePasswordRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserChangePasswordRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserChangePasswordRequest.name)
}

// optional string password = 2;
inline void AuthUserChangePasswordRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthUserChangePasswordRequest::password() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserChangePasswordRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserChangePasswordRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthUserChangePasswordRequest.password)
}
inline void AuthUserChangePasswordRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthUserChangePasswordRequest.password)
}
inline void AuthUserChangePasswordRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthUserChangePasswordRequest.password)
}
inline ::std::string* AuthUserChangePasswordRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserChangePasswordRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthUserChangePasswordRequest::release_password() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserChangePasswordRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserChangePasswordRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserChangePasswordRequest.password)
}

// -------------------------------------------------------------------

// AuthUserGrantRoleRequest

// optional string user = 1;
inline void AuthUserGrantRoleRequest::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthUserGrantRoleRequest::user() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserGrantRoleRequest.user)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserGrantRoleRequest::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthUserGrantRoleRequest.user)
}
inline void AuthUserGrantRoleRequest::set_user(const char* value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthUserGrantRoleRequest.user)
}
inline void AuthUserGrantRoleRequest::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthUserGrantRoleRequest.user)
}
inline ::std::string* AuthUserGrantRoleRequest::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserGrantRoleRequest.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthUserGrantRoleRequest::release_user() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserGrantRoleRequest.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserGrantRoleRequest::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserGrantRoleRequest.user)
}

// optional string role = 2;
inline void AuthUserGrantRoleRequest::clear_role() {
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthUserGrantRoleRequest::role() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserGrantRoleRequest.role)
  return role_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserGrantRoleRequest::set_role(const ::std::string& value) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthUserGrantRoleRequest.role)
}
inline void AuthUserGrantRoleRequest::set_role(const char* value) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthUserGrantRoleRequest.role)
}
inline void AuthUserGrantRoleRequest::set_role(const char* value, size_t size) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthUserGrantRoleRequest.role)
}
inline ::std::string* AuthUserGrantRoleRequest::mutable_role() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserGrantRoleRequest.role)
  return role_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthUserGrantRoleRequest::release_role() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserGrantRoleRequest.role)
  
  return role_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserGrantRoleRequest::set_allocated_role(::std::string* role) {
  if (role != NULL) {
    
  } else {
    
  }
  role_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserGrantRoleRequest.role)
}

// -------------------------------------------------------------------

// AuthUserRevokeRoleRequest

// optional string name = 1;
inline void AuthUserRevokeRoleRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthUserRevokeRoleRequest::name() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserRevokeRoleRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserRevokeRoleRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthUserRevokeRoleRequest.name)
}
inline void AuthUserRevokeRoleRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthUserRevokeRoleRequest.name)
}
inline void AuthUserRevokeRoleRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthUserRevokeRoleRequest.name)
}
inline ::std::string* AuthUserRevokeRoleRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserRevokeRoleRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthUserRevokeRoleRequest::release_name() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserRevokeRoleRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserRevokeRoleRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserRevokeRoleRequest.name)
}

// optional string role = 2;
inline void AuthUserRevokeRoleRequest::clear_role() {
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthUserRevokeRoleRequest::role() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserRevokeRoleRequest.role)
  return role_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserRevokeRoleRequest::set_role(const ::std::string& value) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthUserRevokeRoleRequest.role)
}
inline void AuthUserRevokeRoleRequest::set_role(const char* value) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthUserRevokeRoleRequest.role)
}
inline void AuthUserRevokeRoleRequest::set_role(const char* value, size_t size) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthUserRevokeRoleRequest.role)
}
inline ::std::string* AuthUserRevokeRoleRequest::mutable_role() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserRevokeRoleRequest.role)
  return role_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthUserRevokeRoleRequest::release_role() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserRevokeRoleRequest.role)
  
  return role_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthUserRevokeRoleRequest::set_allocated_role(::std::string* role) {
  if (role != NULL) {
    
  } else {
    
  }
  role_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserRevokeRoleRequest.role)
}

// -------------------------------------------------------------------

// AuthRoleAddRequest

// optional string name = 1;
inline void AuthRoleAddRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRoleAddRequest::name() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleAddRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleAddRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthRoleAddRequest.name)
}
inline void AuthRoleAddRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthRoleAddRequest.name)
}
inline void AuthRoleAddRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthRoleAddRequest.name)
}
inline ::std::string* AuthRoleAddRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleAddRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRoleAddRequest::release_name() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleAddRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleAddRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleAddRequest.name)
}

// -------------------------------------------------------------------

// AuthRoleGetRequest

// optional string role = 1;
inline void AuthRoleGetRequest::clear_role() {
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRoleGetRequest::role() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleGetRequest.role)
  return role_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleGetRequest::set_role(const ::std::string& value) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthRoleGetRequest.role)
}
inline void AuthRoleGetRequest::set_role(const char* value) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthRoleGetRequest.role)
}
inline void AuthRoleGetRequest::set_role(const char* value, size_t size) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthRoleGetRequest.role)
}
inline ::std::string* AuthRoleGetRequest::mutable_role() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleGetRequest.role)
  return role_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRoleGetRequest::release_role() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleGetRequest.role)
  
  return role_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleGetRequest::set_allocated_role(::std::string* role) {
  if (role != NULL) {
    
  } else {
    
  }
  role_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleGetRequest.role)
}

// -------------------------------------------------------------------

// AuthUserListRequest

// -------------------------------------------------------------------

// AuthRoleListRequest

// -------------------------------------------------------------------

// AuthRoleDeleteRequest

// optional string role = 1;
inline void AuthRoleDeleteRequest::clear_role() {
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRoleDeleteRequest::role() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleDeleteRequest.role)
  return role_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleDeleteRequest::set_role(const ::std::string& value) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthRoleDeleteRequest.role)
}
inline void AuthRoleDeleteRequest::set_role(const char* value) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthRoleDeleteRequest.role)
}
inline void AuthRoleDeleteRequest::set_role(const char* value, size_t size) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthRoleDeleteRequest.role)
}
inline ::std::string* AuthRoleDeleteRequest::mutable_role() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleDeleteRequest.role)
  return role_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRoleDeleteRequest::release_role() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleDeleteRequest.role)
  
  return role_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleDeleteRequest::set_allocated_role(::std::string* role) {
  if (role != NULL) {
    
  } else {
    
  }
  role_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleDeleteRequest.role)
}

// -------------------------------------------------------------------

// AuthRoleGrantPermissionRequest

// optional string name = 1;
inline void AuthRoleGrantPermissionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRoleGrantPermissionRequest::name() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleGrantPermissionRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleGrantPermissionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthRoleGrantPermissionRequest.name)
}
inline void AuthRoleGrantPermissionRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthRoleGrantPermissionRequest.name)
}
inline void AuthRoleGrantPermissionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthRoleGrantPermissionRequest.name)
}
inline ::std::string* AuthRoleGrantPermissionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleGrantPermissionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRoleGrantPermissionRequest::release_name() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleGrantPermissionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleGrantPermissionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleGrantPermissionRequest.name)
}

// optional .authpb.Permission perm = 2;
inline bool AuthRoleGrantPermissionRequest::has_perm() const {
  return !_is_default_instance_ && perm_ != NULL;
}
inline void AuthRoleGrantPermissionRequest::clear_perm() {
  if (GetArenaNoVirtual() == NULL && perm_ != NULL) delete perm_;
  perm_ = NULL;
}
inline const ::authpb::Permission& AuthRoleGrantPermissionRequest::perm() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleGrantPermissionRequest.perm)
  return perm_ != NULL ? *perm_ : *default_instance_->perm_;
}
inline ::authpb::Permission* AuthRoleGrantPermissionRequest::mutable_perm() {
  
  if (perm_ == NULL) {
    perm_ = new ::authpb::Permission;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleGrantPermissionRequest.perm)
  return perm_;
}
inline ::authpb::Permission* AuthRoleGrantPermissionRequest::release_perm() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleGrantPermissionRequest.perm)
  
  ::authpb::Permission* temp = perm_;
  perm_ = NULL;
  return temp;
}
inline void AuthRoleGrantPermissionRequest::set_allocated_perm(::authpb::Permission* perm) {
  delete perm_;
  perm_ = perm;
  if (perm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleGrantPermissionRequest.perm)
}

// -------------------------------------------------------------------

// AuthRoleRevokePermissionRequest

// optional string role = 1;
inline void AuthRoleRevokePermissionRequest::clear_role() {
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRoleRevokePermissionRequest::role() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleRevokePermissionRequest.role)
  return role_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleRevokePermissionRequest::set_role(const ::std::string& value) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthRoleRevokePermissionRequest.role)
}
inline void AuthRoleRevokePermissionRequest::set_role(const char* value) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthRoleRevokePermissionRequest.role)
}
inline void AuthRoleRevokePermissionRequest::set_role(const char* value, size_t size) {
  
  role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthRoleRevokePermissionRequest.role)
}
inline ::std::string* AuthRoleRevokePermissionRequest::mutable_role() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleRevokePermissionRequest.role)
  return role_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRoleRevokePermissionRequest::release_role() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleRevokePermissionRequest.role)
  
  return role_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleRevokePermissionRequest::set_allocated_role(::std::string* role) {
  if (role != NULL) {
    
  } else {
    
  }
  role_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), role);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleRevokePermissionRequest.role)
}

// optional string key = 2;
inline void AuthRoleRevokePermissionRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRoleRevokePermissionRequest::key() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleRevokePermissionRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleRevokePermissionRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthRoleRevokePermissionRequest.key)
}
inline void AuthRoleRevokePermissionRequest::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthRoleRevokePermissionRequest.key)
}
inline void AuthRoleRevokePermissionRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthRoleRevokePermissionRequest.key)
}
inline ::std::string* AuthRoleRevokePermissionRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleRevokePermissionRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRoleRevokePermissionRequest::release_key() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleRevokePermissionRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleRevokePermissionRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleRevokePermissionRequest.key)
}

// optional string range_end = 3;
inline void AuthRoleRevokePermissionRequest::clear_range_end() {
  range_end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRoleRevokePermissionRequest::range_end() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleRevokePermissionRequest.range_end)
  return range_end_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleRevokePermissionRequest::set_range_end(const ::std::string& value) {
  
  range_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthRoleRevokePermissionRequest.range_end)
}
inline void AuthRoleRevokePermissionRequest::set_range_end(const char* value) {
  
  range_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthRoleRevokePermissionRequest.range_end)
}
inline void AuthRoleRevokePermissionRequest::set_range_end(const char* value, size_t size) {
  
  range_end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthRoleRevokePermissionRequest.range_end)
}
inline ::std::string* AuthRoleRevokePermissionRequest::mutable_range_end() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleRevokePermissionRequest.range_end)
  return range_end_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRoleRevokePermissionRequest::release_range_end() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleRevokePermissionRequest.range_end)
  
  return range_end_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRoleRevokePermissionRequest::set_allocated_range_end(::std::string* range_end) {
  if (range_end != NULL) {
    
  } else {
    
  }
  range_end_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), range_end);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleRevokePermissionRequest.range_end)
}

// -------------------------------------------------------------------

// AuthEnableResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthEnableResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthEnableResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthEnableResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthEnableResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthEnableResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthEnableResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthEnableResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthEnableResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthEnableResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthEnableResponse.header)
}

// -------------------------------------------------------------------

// AuthDisableResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthDisableResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthDisableResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthDisableResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthDisableResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthDisableResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthDisableResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthDisableResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthDisableResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthDisableResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthDisableResponse.header)
}

// -------------------------------------------------------------------

// AuthenticateResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthenticateResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthenticateResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthenticateResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthenticateResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthenticateResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthenticateResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthenticateResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthenticateResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthenticateResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthenticateResponse.header)
}

// optional string token = 2;
inline void AuthenticateResponse::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthenticateResponse::token() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthenticateResponse.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateResponse::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthenticateResponse.token)
}
inline void AuthenticateResponse::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthenticateResponse.token)
}
inline void AuthenticateResponse::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthenticateResponse.token)
}
inline ::std::string* AuthenticateResponse::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthenticateResponse.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateResponse::release_token() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthenticateResponse.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateResponse::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthenticateResponse.token)
}

// -------------------------------------------------------------------

// AuthUserAddResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthUserAddResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthUserAddResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthUserAddResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserAddResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserAddResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserAddResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserAddResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserAddResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthUserAddResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserAddResponse.header)
}

// -------------------------------------------------------------------

// AuthUserGetResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthUserGetResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthUserGetResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthUserGetResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserGetResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserGetResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserGetResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserGetResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserGetResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthUserGetResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserGetResponse.header)
}

// repeated string roles = 2;
inline int AuthUserGetResponse::roles_size() const {
  return roles_.size();
}
inline void AuthUserGetResponse::clear_roles() {
  roles_.Clear();
}
inline const ::std::string& AuthUserGetResponse::roles(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserGetResponse.roles)
  return roles_.Get(index);
}
inline ::std::string* AuthUserGetResponse::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserGetResponse.roles)
  return roles_.Mutable(index);
}
inline void AuthUserGetResponse::set_roles(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthUserGetResponse.roles)
  roles_.Mutable(index)->assign(value);
}
inline void AuthUserGetResponse::set_roles(int index, const char* value) {
  roles_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthUserGetResponse.roles)
}
inline void AuthUserGetResponse::set_roles(int index, const char* value, size_t size) {
  roles_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthUserGetResponse.roles)
}
inline ::std::string* AuthUserGetResponse::add_roles() {
  // @@protoc_insertion_point(field_add_mutable:etcdserverpb.AuthUserGetResponse.roles)
  return roles_.Add();
}
inline void AuthUserGetResponse::add_roles(const ::std::string& value) {
  roles_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:etcdserverpb.AuthUserGetResponse.roles)
}
inline void AuthUserGetResponse::add_roles(const char* value) {
  roles_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:etcdserverpb.AuthUserGetResponse.roles)
}
inline void AuthUserGetResponse::add_roles(const char* value, size_t size) {
  roles_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:etcdserverpb.AuthUserGetResponse.roles)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AuthUserGetResponse::roles() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.AuthUserGetResponse.roles)
  return roles_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AuthUserGetResponse::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.AuthUserGetResponse.roles)
  return &roles_;
}

// -------------------------------------------------------------------

// AuthUserDeleteResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthUserDeleteResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthUserDeleteResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthUserDeleteResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserDeleteResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserDeleteResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserDeleteResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserDeleteResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserDeleteResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthUserDeleteResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserDeleteResponse.header)
}

// -------------------------------------------------------------------

// AuthUserChangePasswordResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthUserChangePasswordResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthUserChangePasswordResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthUserChangePasswordResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserChangePasswordResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserChangePasswordResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserChangePasswordResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserChangePasswordResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserChangePasswordResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthUserChangePasswordResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserChangePasswordResponse.header)
}

// -------------------------------------------------------------------

// AuthUserGrantRoleResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthUserGrantRoleResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthUserGrantRoleResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthUserGrantRoleResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserGrantRoleResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserGrantRoleResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserGrantRoleResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserGrantRoleResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserGrantRoleResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthUserGrantRoleResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserGrantRoleResponse.header)
}

// -------------------------------------------------------------------

// AuthUserRevokeRoleResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthUserRevokeRoleResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthUserRevokeRoleResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthUserRevokeRoleResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserRevokeRoleResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserRevokeRoleResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserRevokeRoleResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserRevokeRoleResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserRevokeRoleResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthUserRevokeRoleResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserRevokeRoleResponse.header)
}

// -------------------------------------------------------------------

// AuthRoleAddResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthRoleAddResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthRoleAddResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthRoleAddResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleAddResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthRoleAddResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleAddResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthRoleAddResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleAddResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthRoleAddResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleAddResponse.header)
}

// -------------------------------------------------------------------

// AuthRoleGetResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthRoleGetResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthRoleGetResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthRoleGetResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleGetResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthRoleGetResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleGetResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthRoleGetResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleGetResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthRoleGetResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleGetResponse.header)
}

// repeated .authpb.Permission perm = 2;
inline int AuthRoleGetResponse::perm_size() const {
  return perm_.size();
}
inline void AuthRoleGetResponse::clear_perm() {
  perm_.Clear();
}
inline const ::authpb::Permission& AuthRoleGetResponse::perm(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleGetResponse.perm)
  return perm_.Get(index);
}
inline ::authpb::Permission* AuthRoleGetResponse::mutable_perm(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleGetResponse.perm)
  return perm_.Mutable(index);
}
inline ::authpb::Permission* AuthRoleGetResponse::add_perm() {
  // @@protoc_insertion_point(field_add:etcdserverpb.AuthRoleGetResponse.perm)
  return perm_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::authpb::Permission >*
AuthRoleGetResponse::mutable_perm() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.AuthRoleGetResponse.perm)
  return &perm_;
}
inline const ::google::protobuf::RepeatedPtrField< ::authpb::Permission >&
AuthRoleGetResponse::perm() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.AuthRoleGetResponse.perm)
  return perm_;
}

// -------------------------------------------------------------------

// AuthRoleListResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthRoleListResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthRoleListResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthRoleListResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleListResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthRoleListResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleListResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthRoleListResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleListResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthRoleListResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleListResponse.header)
}

// repeated string roles = 2;
inline int AuthRoleListResponse::roles_size() const {
  return roles_.size();
}
inline void AuthRoleListResponse::clear_roles() {
  roles_.Clear();
}
inline const ::std::string& AuthRoleListResponse::roles(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleListResponse.roles)
  return roles_.Get(index);
}
inline ::std::string* AuthRoleListResponse::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleListResponse.roles)
  return roles_.Mutable(index);
}
inline void AuthRoleListResponse::set_roles(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthRoleListResponse.roles)
  roles_.Mutable(index)->assign(value);
}
inline void AuthRoleListResponse::set_roles(int index, const char* value) {
  roles_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthRoleListResponse.roles)
}
inline void AuthRoleListResponse::set_roles(int index, const char* value, size_t size) {
  roles_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthRoleListResponse.roles)
}
inline ::std::string* AuthRoleListResponse::add_roles() {
  // @@protoc_insertion_point(field_add_mutable:etcdserverpb.AuthRoleListResponse.roles)
  return roles_.Add();
}
inline void AuthRoleListResponse::add_roles(const ::std::string& value) {
  roles_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:etcdserverpb.AuthRoleListResponse.roles)
}
inline void AuthRoleListResponse::add_roles(const char* value) {
  roles_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:etcdserverpb.AuthRoleListResponse.roles)
}
inline void AuthRoleListResponse::add_roles(const char* value, size_t size) {
  roles_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:etcdserverpb.AuthRoleListResponse.roles)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AuthRoleListResponse::roles() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.AuthRoleListResponse.roles)
  return roles_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AuthRoleListResponse::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.AuthRoleListResponse.roles)
  return &roles_;
}

// -------------------------------------------------------------------

// AuthUserListResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthUserListResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthUserListResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthUserListResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserListResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserListResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserListResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthUserListResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthUserListResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthUserListResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthUserListResponse.header)
}

// repeated string users = 2;
inline int AuthUserListResponse::users_size() const {
  return users_.size();
}
inline void AuthUserListResponse::clear_users() {
  users_.Clear();
}
inline const ::std::string& AuthUserListResponse::users(int index) const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthUserListResponse.users)
  return users_.Get(index);
}
inline ::std::string* AuthUserListResponse::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthUserListResponse.users)
  return users_.Mutable(index);
}
inline void AuthUserListResponse::set_users(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:etcdserverpb.AuthUserListResponse.users)
  users_.Mutable(index)->assign(value);
}
inline void AuthUserListResponse::set_users(int index, const char* value) {
  users_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:etcdserverpb.AuthUserListResponse.users)
}
inline void AuthUserListResponse::set_users(int index, const char* value, size_t size) {
  users_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.AuthUserListResponse.users)
}
inline ::std::string* AuthUserListResponse::add_users() {
  // @@protoc_insertion_point(field_add_mutable:etcdserverpb.AuthUserListResponse.users)
  return users_.Add();
}
inline void AuthUserListResponse::add_users(const ::std::string& value) {
  users_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:etcdserverpb.AuthUserListResponse.users)
}
inline void AuthUserListResponse::add_users(const char* value) {
  users_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:etcdserverpb.AuthUserListResponse.users)
}
inline void AuthUserListResponse::add_users(const char* value, size_t size) {
  users_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:etcdserverpb.AuthUserListResponse.users)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AuthUserListResponse::users() const {
  // @@protoc_insertion_point(field_list:etcdserverpb.AuthUserListResponse.users)
  return users_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AuthUserListResponse::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:etcdserverpb.AuthUserListResponse.users)
  return &users_;
}

// -------------------------------------------------------------------

// AuthRoleDeleteResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthRoleDeleteResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthRoleDeleteResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthRoleDeleteResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleDeleteResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthRoleDeleteResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleDeleteResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthRoleDeleteResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleDeleteResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthRoleDeleteResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleDeleteResponse.header)
}

// -------------------------------------------------------------------

// AuthRoleGrantPermissionResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthRoleGrantPermissionResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthRoleGrantPermissionResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthRoleGrantPermissionResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleGrantPermissionResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthRoleGrantPermissionResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleGrantPermissionResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthRoleGrantPermissionResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleGrantPermissionResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthRoleGrantPermissionResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleGrantPermissionResponse.header)
}

// -------------------------------------------------------------------

// AuthRoleRevokePermissionResponse

// optional .etcdserverpb.ResponseHeader header = 1;
inline bool AuthRoleRevokePermissionResponse::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void AuthRoleRevokePermissionResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::etcdserverpb::ResponseHeader& AuthRoleRevokePermissionResponse::header() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.AuthRoleRevokePermissionResponse.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::etcdserverpb::ResponseHeader* AuthRoleRevokePermissionResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::etcdserverpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:etcdserverpb.AuthRoleRevokePermissionResponse.header)
  return header_;
}
inline ::etcdserverpb::ResponseHeader* AuthRoleRevokePermissionResponse::release_header() {
  // @@protoc_insertion_point(field_release:etcdserverpb.AuthRoleRevokePermissionResponse.header)
  
  ::etcdserverpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AuthRoleRevokePermissionResponse::set_allocated_header(::etcdserverpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.AuthRoleRevokePermissionResponse.header)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace etcdserverpb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::etcdserverpb::RangeRequest_SortOrder> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::etcdserverpb::RangeRequest_SortOrder>() {
  return ::etcdserverpb::RangeRequest_SortOrder_descriptor();
}
template <> struct is_proto_enum< ::etcdserverpb::RangeRequest_SortTarget> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::etcdserverpb::RangeRequest_SortTarget>() {
  return ::etcdserverpb::RangeRequest_SortTarget_descriptor();
}
template <> struct is_proto_enum< ::etcdserverpb::Compare_CompareResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::etcdserverpb::Compare_CompareResult>() {
  return ::etcdserverpb::Compare_CompareResult_descriptor();
}
template <> struct is_proto_enum< ::etcdserverpb::Compare_CompareTarget> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::etcdserverpb::Compare_CompareTarget>() {
  return ::etcdserverpb::Compare_CompareTarget_descriptor();
}
template <> struct is_proto_enum< ::etcdserverpb::WatchCreateRequest_FilterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::etcdserverpb::WatchCreateRequest_FilterType>() {
  return ::etcdserverpb::WatchCreateRequest_FilterType_descriptor();
}
template <> struct is_proto_enum< ::etcdserverpb::AlarmRequest_AlarmAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::etcdserverpb::AlarmRequest_AlarmAction>() {
  return ::etcdserverpb::AlarmRequest_AlarmAction_descriptor();
}
template <> struct is_proto_enum< ::etcdserverpb::AlarmType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::etcdserverpb::AlarmType>() {
  return ::etcdserverpb::AlarmType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rpc_2eproto__INCLUDED
